{"version":3,"sources":["config/api.js","utils/request.js","pages/MainPage/components/PopupModal.js","pages/MainPage/MainPage.js","pages/StarterPage/StarterPage.js","pages/404/index.js","pages/QuestionPage/QuestionPage.js","pages/ReadyPage/ReadyPage.js","pages/TrailPage/components/PopupModal.js","pages/TrailPage/TrailPage.js","pages/DemographicPage/DemographicPage.js","components/route/route.js","App.js","reportWebVitals.js","index.js"],"names":["Api","window","location","origin","protocol","hostname","port","parseJSON","response","request","options","user_id","localStorage","getItem","data","url","mode","body","JSON","stringify","headers","fetch","credentials","then","res","code","console","log","catch","err","PopupModal","props","Countdown","Statistic","useState","Date","now","deadline","setDeadline","firstEstimation","setFirstEstimation","updatedEstimation","setUpdatedEstimation","firstConfirm","setFirstConfim","nowTime","setNowTime","userInputTime","setUserInputTime","questionId","setQuestionId","AISuggestion","setAISuggestion","showNextBtn","setShowNextBtn","inputDiabled","setInputDiabled","storeData","passInUpdated","responseTime","modalCountDown","q_id","resp_time","init_guess","final_guess","method","useEffect","undefined","imgName","qId","split","length","json","aiSugg","getAISuggestion","title","centered","visible","openModal","footer","className","gutter","style","marginBottom","span","placeholder","onChange","e","target","value","toFixed","disabled","onFinish","format","textAlign","type","size","onClick","modalTimesUp","marginTop","baseImgUrl","require","MainPage","imgIndex","setImgIndex","setImgName","imageList","setImageList","setOpenModal","deleteImg","setDeleteImg","firstCountDown","setFirstCountDown","setModalCountDown","formatImageList","imageString","strList","imgList","str","push","src","assign","Title","Typography","Text","StarterPage","consent","setConsent","start","setItem","startReq","message","warning","level","checked","margin","PageNotFound","status","subTitle","extra","history","QuestionPage","fontSize","href","ReadyPage","TrailPage","deadlineValue","formItemLayout","labelCol","wrapperCol","DemographicPage","layout","values","onFinishFailed","errorInfo","Item","label","name","rules","required","htmlType","Router","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6aAAIA,EAAM,GAELC,OAAOC,SAASC,SACnBF,OAAOC,SAASC,OAASF,OAAOC,SAASE,SAAW,KAAOH,OAAOC,SAASG,UAAYJ,OAAOC,SAASI,KAAO,IAAML,OAAOC,SAASI,KAAM,KAOpIN,EAAMC,OAAOC,SAASC,O,YCR9B,SAASI,EAAUC,GACf,OAAOA,EAgCJ,SAASC,IAAuB,IAAfC,EAAc,uDAAJ,GACxBC,EAAUC,aAAaC,QAAQ,WADH,EAEZH,EAAdI,EAF0B,EAE1BA,KAAMC,EAFoB,EAEpBA,IAad,OAZAL,EAAO,eAAQA,IACPM,KAAO,cACRN,EAAQK,IACXD,WACOJ,EAAQI,KACfJ,EAAQO,KAAOC,KAAKC,UAAUL,IAElCJ,EAAQU,QAAU,CACd,UAAWT,EACX,eAAgB,kCAGbU,MAAMN,EAAKL,EAAS,CAAEM,KAAM,OAAQM,YAAa,YACnDC,KAAKhB,GACLgB,MAAK,SAACC,GACH,OAAiB,MAAbA,EAAIC,MAIJC,QAAQC,IAAI,QAASH,GAHdA,KAOdI,OAAM,SAAAC,GAAG,MAAK,CAAEA,U,WC6JVC,EArNI,SAACC,GAAW,IACrBC,EAAcC,IAAdD,UADoB,EAEIE,mBAASC,KAAKC,MAAQ,KAF1B,mBAErBC,EAFqB,KAEXC,EAFW,OAGkBJ,mBAAS,GAH3B,mBAGrBK,EAHqB,KAGJC,EAHI,OAIsBN,mBAAS,GAJ/B,mBAIrBO,EAJqB,KAIFC,EAJE,OAKWR,oBAAS,GALpB,mBAKrBS,EALqB,KAKPC,EALO,OAMEV,mBAASC,KAAKC,OANhB,mBAMrBS,EANqB,KAMZC,EANY,OAOcZ,mBAASC,KAAKC,OAP5B,mBAOrBW,EAPqB,KAONC,EAPM,OAQQd,mBAAS,IARjB,mBAQrBe,EARqB,KAQTC,EARS,OASYhB,mBAAS,GATrB,mBASrBiB,EATqB,KASPC,EATO,OAUUlB,oBAAS,GAVnB,mBAUrBmB,EAVqB,KAURC,EAVQ,OAWYpB,oBAAS,GAXrB,mBAWrBqB,EAXqB,KAWPC,EAXO,KAwBtBC,EAAY,SAACC,GACjB,IAAIC,EAAe,EACKA,EAAH,IAAlBZ,EAAoChB,EAAM6B,eACzBb,EACpB,IAAIjC,EAAO,CACTH,QAASC,aAAaC,QAAQ,WAC9BgD,KAAMZ,EACNa,UAAWH,EACXI,WAAYxB,EACZyB,YAAaN,GAGfjD,EAAQ,CAAEM,IAAI,GAAD,OAAKf,EAAL,WAAmBiE,OAAQ,OAAQnD,KAAMA,IAAQS,MAAK,SAACC,GAClEE,QAAQC,IAAIH,OAmEhB,OAfA0C,qBAAU,WACR,QAAqBC,IAAlBpC,EAAMqC,QAAT,CACA,IAAIC,EAAMtC,EAAMqC,QAAQE,MAAM,KAAK,GACjB,IAAfD,EAAIE,SACLrB,EAAcmB,GApDM,SAACA,GAEvB5D,EAAQ,CAAEM,IADA,UAAGf,EAAH,oBAA2BqE,EACjBJ,OAAQ,QACzB1C,MAAK,SAACf,GAAD,OAAcA,EAASgE,UAC5BjD,MAAK,SAACC,GACL,IAAIiD,EAASjD,EAAG,GAChBE,QAAQC,IAAI,SAAU8C,GACtBrB,EAAgBqB,MA8ClBC,CAAgBL,OAQjB,CAACtC,EAAMqC,UAGR,cAAC,IAAD,CACEO,MAAM,uBACNC,UAAQ,EACRC,QAAS9C,EAAM+C,UACfC,OAAQ,KAJV,SAME,sBAAKC,UAAU,gBAAf,UACE,oHAIErC,EA8BA,gCACE,eAAC,IAAD,CAAKsC,OAAQ,GAAIC,MAAO,CAACC,aAAa,QAAtC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,4BACA,qBAAKA,UAAU,WAAf,SAA2BzC,SAG/B,cAAC,IAAD,CAAK6C,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,8BACA,qBAAKA,UAAU,WAAf,SAA2B7B,YAKjC,sBAAK6B,UAAU,cAAf,UACE,qGAIA,eAAC,IAAD,CAAKC,OAAQ,EAAGC,MAAO,CAACC,aAAa,QAArC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,mCACA,cAAC,IAAD,CACEA,UAAU,WACVK,YAAa9C,EACb+C,SA/FM,SAACC,GACzB7C,EAAqB6C,EAAEC,OAAOC,OAC9BzC,IAAmBb,KAAKC,MAAQS,GAAW,KAAM6C,QAAQ,KA8FvCC,SAAUpC,SAIhB,cAAC,IAAD,CAAK6B,KAAM,GAAX,SACE,qBAAKJ,UAAU,YAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,cAAChD,EAAD,CACE2C,MAAM,YACNc,MAAOpD,EACPuD,SA5KU,WACJ,IAAtBnD,GACFC,EAAqBH,GACrBkB,EAAUlB,IAEVkB,EAAUhB,GAEZa,GAAe,GACfE,GAAgB,IAqKIqC,OAAO,mBAMhBxC,EACG,qBAAK6B,MAAO,CAACY,UAAU,UAAvB,SACA,cAAC,IAAD,CACEC,KAAK,UACLC,KAAK,QACLC,QAjHC,WACjBlE,EAAMmE,eApBN1D,EAAmB,GACnBE,EAAqB,GACrBE,GAAe,GACfY,GAAgB,GAChBF,GAAe,GACfN,EAAiB,IA4HH,0BASA,8BAtFR,8BACE,eAAC,IAAD,CAAKiC,OAAQ,GAAIC,MAAO,CAACC,aAAa,QAAtC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,4BACA,cAAC,IAAD,CACEA,UAAU,WACVK,YAAY,IACZC,SAAU,SAACC,GACT/C,EAAmB+C,EAAEC,OAAOC,eAKpC,cAAC,IAAD,CAAKL,KAAM,GAAX,SACE,qBAAKJ,UAAU,YAAf,SACE,cAAC,IAAD,CACEe,KAAK,UACLC,KAAK,QACLd,MAAO,CAAEiB,UAAW,QACpBF,QAhEI,WACpBrD,GAAe,GACfN,EAAYH,KAAKC,MAAQ,IAAOL,EAAM6B,gBACtCd,EAAWX,KAAKC,QAyDF,oCChIZgE,GAFKC,EAAQ,KAEA,gBA8GJC,EA5GE,WAAM,MAEapE,mBAAS,IAFtB,gCAGWA,mBAAS,IAHpB,mBAGdqE,EAHc,KAGJC,EAHI,OAIStE,mBAAS,IAJlB,mBAIdkC,EAJc,KAILqC,EAJK,OAKavE,mBAAS,IALtB,mBAKdwE,EALc,KAKHC,EALG,OAMazE,oBAAS,GANtB,mBAMd4C,EANc,KAMH8B,EANG,OAOW1E,mBAAS,GAPpB,gCAQaA,oBAAS,IARtB,mBAQd2E,EARc,KAQHC,EARG,OASuB5E,mBAASC,KAAKC,MAAQ,KAT7C,mBASd2E,EATc,KASEC,EATF,OAUuB9E,mBAASC,KAAKC,MAAQ,KAV7C,mBAUdwB,EAVc,KAUEqD,EAVF,KAabjF,GADcG,KAAKC,MACLH,IAAdD,WAoCFkF,EAAkB,SAACC,GACvB,IADsC,EAClCC,EAAUD,EAAY7C,MAAM,KAC5B+C,EAAU,GAFwB,cAIvBD,GAJuB,IAItC,IAAI,EAAJ,qBAAuB,CAAC,IAAhBE,EAAe,QACrBA,GAAO,OACPD,EAAQE,KAAKD,IANuB,8BAQtCb,EAAWY,EAAQ,IACnBV,EAAaU,IAcf,OAXAnD,qBAAU,WA1BRzD,EAAQ,CAAEM,IADA,UAAGf,EAAH,qBAA4BY,aAAaC,QAAQ,WACvCoD,OAAO,QAC1B1C,MAAK,SAAAf,GAAQ,OAAIA,EAASgE,UAC1BjD,MACC,SAAAC,GACEE,QAAQC,IAAI,UAAWH,GACvB,IAAI2F,EAAc3F,EAAG,QACrB0F,EAAgBC,GAChBF,EAAkBzF,EAAG,QACC,MAAnB2F,EAAY,GAAYH,EAAkB7E,KAAKC,MAAQ,KACpD4E,EAAkB7E,KAAKC,MAAQ,UAmBxC,IAEH8B,qBAAU,gBACOC,IAAZC,GAAwC,MAAfA,EAAQ,GAClC4C,EAAkB7E,KAAKC,MAAQ,UACb+B,IAAZC,GAAwC,MAAfA,EAAQ,IACzC4C,EAAkB7E,KAAKC,MAAQ,OAC/B,CAACgC,IAGD,sBAAKY,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,kDACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,YAAf,SACG6B,EACC,qBAAKW,IAAKpB,EAAa,eAEvB,qBAAKoB,IAAKpB,EAAaM,EAAUH,WAKzC,qBAAKvB,UAAU,qBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAAChD,EAAD,CACE2C,MAAM,YACNc,MAAOsB,EACPnB,SA7EoB,WAC9BkB,GAAa,GACbF,GAAa,IA4EHf,OAAO,iBAKf,cAAC,EAAD,CACEf,UAAWA,EACXoB,aAhFe,WAChBK,GAAYG,EAAUnC,OAAS,GAChCtE,OAAOC,SAASuH,OAAO,oBAGzBX,GAAa,GACbF,GAAa,GACbH,EAAWC,EAAUH,EAAW,IAChCC,EAAYD,EAAW,IAyEnB3C,eAAgBA,EAChBQ,QAASA,Q,2BC3GTsD,G,OAAiBC,IAAjBD,OAAQE,EAASD,IAATC,KA8CDC,EA5CK,WAAO,IAAD,EAEQ3F,oBAAS,GAFjB,mBAEf4F,EAFe,KAENC,EAFM,KAIhBC,EAAQ,YACK,IAAZF,GACCpG,QAAQC,IAAI,eHJjB,SAAkBb,GACrB,IAAMJ,EAAU,GAQhB,OAPAA,EAAQK,IAAR,UAAiBf,EAAjB,UACAU,EAAQuD,OAAS,OACjBvD,EAAQM,KAAO,OACfN,EAAQO,KAAOC,KAAKC,UAAUL,GAC9BJ,EAAQU,QAAU,CACd,eAAgB,kCAEbC,MAAMX,EAAQK,IAAKL,EAAS,CAAEY,YAAa,YAC7CC,MAAK,SAAAf,GAAQ,OAAIA,EAASgE,UAC1BjD,MAAK,SAACC,GAIH,OAFAE,QAAQC,IAAI,UAAWH,GACvBZ,aAAaqH,QAAQ,UAAWzG,EAAG,SAC5BA,KAEVI,OAAM,SAAAC,GAAG,MAAK,CAAEA,UGZbqG,CAAS,CAAEJ,QAAS,IAAIvG,KAAKtB,OAAOC,SAASuH,OAAO,kBAGpDU,IAAQC,QAAQ,sDASxB,OACI,sBAAKpD,UAAU,iBAAf,UACE,cAAC0C,EAAD,CAAOW,MAAO,EAAd,kDACE,cAACT,EAAD,CAAMS,MAAO,EAAb,2qBAEA,qBAAKrD,UAAU,kBAAf,SACI,cAAC,IAAD,CAAUM,SAXtB,SAAkBC,GACd7D,QAAQC,IAAR,oBAAyB4D,EAAEC,OAAO8C,UAClCP,EAAWxC,EAAEC,OAAO8C,UASZ,sEAKJ,8BACI,cAAC,IAAD,CACIvC,KAAK,UACLC,KAAK,SACLd,MAAO,CAAEqD,OAAQ,UACjBtC,QAAS,kBAAM+B,KAJnB,+B,SC3BDQ,EAXM,SAACzG,GAClB,OACI,cAAC,IAAD,CACI0G,OAAO,MACP9D,MAAM,MACN+D,SAAS,8CACTC,MAAO,cAAC,IAAD,CAAQ5C,KAAK,UAAUE,QAAS,kBAAMlE,EAAM6G,QAAQrB,KAAK,MAAzD,0BCiBJsB,G,OAlBM,WAKnB,OAJA3E,qBAAU,cAER,IAGA,sBAAKc,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,2BACA,sBAAKE,MAAO,CAAC4D,SAAS,QAAtB,wFAEe,OAEf,cAAC,IAAD,CAAO9D,UAAU,cAAcS,MAAO7E,aAAaC,QAAQ,aAC3D,8BAAK,mBAAGkI,KAAK,sCAAsCvD,OAAO,SAArD,wDCKIwD,G,OApBG,WAMd,OACI,sBAAKhE,UAAU,uBAAf,UACE,qBAAKA,UAAU,QAAf,mGACA,cAAC,IAAD,CACUe,KAAK,UACLC,KAAK,QACLC,QAVE,WACdhG,OAAOC,SAASuH,OAAO,gBAMrB,6BCmLK3F,G,OA5LI,SAACC,GAAW,IACrBC,EAAcC,IAAdD,UADoB,EAEIE,mBAASC,KAAKC,MAAQ,KAF1B,mBAErBC,EAFqB,KAEXC,EAFW,OAGkBJ,mBAAS,GAH3B,mBAGrBK,EAHqB,KAGJC,EAHI,OAIsBN,mBAAS,GAJ/B,mBAIrBO,EAJqB,KAIFC,EAJE,OAKWR,oBAAS,GALpB,mBAKrBS,EALqB,KAKPC,EALO,OAMEV,mBAASC,KAAKC,OANhB,mBAMrBS,EANqB,KAMZC,EANY,OAOcZ,mBAASC,KAAKC,OAP5B,mBAOrBW,EAPqB,KAONC,EAPM,OAQQd,mBAAS,IARjB,mBAQrBe,EARqB,KAQTC,EARS,OASYhB,mBAAS,GATrB,gCAUUA,oBAAS,IAVnB,mBAUrBmB,EAVqB,KAURC,EAVQ,OAWYpB,oBAAS,GAXrB,mBAWrBqB,EAXqB,KAWPC,EAXO,KAwBtBC,EAAY,SAACC,GACjB,IAAI5C,EAAO,CACTH,QAASC,aAAaC,QAAQ,WAC9BgD,KAAMZ,EACNa,UAAWf,EACXgB,WAAYxB,EACZyB,YAAaN,GAEfjD,EAAQ,CAAEM,IAAI,GAAD,OAAKf,EAAL,WAAmBiE,OAAQ,OAAQnD,KAAMA,IAAQS,MAAK,SAACC,GAClEE,QAAQC,IAAIH,OA8ChB,OARA0C,qBAAU,WAER,GADAxC,QAAQC,IAAI,aACSwC,IAAlBpC,EAAMqC,QAAT,CACA,IAAIC,EAAMtC,EAAMqC,QAAQE,MAAM,KAAK,GACnCpB,EAAcmB,MAEb,CAACtC,EAAMqC,UAGR,cAAC,IAAD,CACEO,MAAM,uBACNC,UAAQ,EACRC,QAAS9C,EAAM+C,UACfC,OAAQ,KAJV,SAME,sBAAKC,UAAU,gBAAf,UACE,oHAIErC,EA8BA,gCACE,eAAC,IAAD,CAAKsC,OAAQ,GAAIC,MAAO,CAACC,aAAa,QAAtC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,4BACA,qBAAKA,UAAU,WAAf,SAA2BzC,SAG/B,cAAC,IAAD,CAAK6C,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,8BACA,qBAAKA,UAAU,WAAf,wBAKN,sBAAKA,UAAU,cAAf,UACE,qGAIA,eAAC,IAAD,CAAKC,OAAQ,EAAGC,MAAO,CAACC,aAAa,QAArC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,mCACA,cAAC,IAAD,CACEA,UAAU,WACVK,YAAa9C,EACb+C,SAxFM,SAACC,GACzB7C,EAAqB6C,EAAEC,OAAOC,OAC9BzC,IAAmBb,KAAKC,MAAQS,GAAW,KAAM6C,QAAQ,KAuFvCC,SAAUpC,SAIhB,cAAC,IAAD,CAAK6B,KAAM,GAAX,SACE,qBAAKJ,UAAU,YAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,cAAChD,EAAD,CACE2C,MAAM,YACNc,MAAOpD,EACPuD,SAnJU,WACJ,IAAtBnD,GACFC,EAAqBH,GACrBkB,EAAUlB,IAEVkB,EAAUhB,GAEZa,GAAe,GACfE,GAAgB,IA4IIqC,OAAO,mBAMhBxC,EACG,qBAAK6B,MAAO,CAACY,UAAU,UAAvB,SACA,cAAC,IAAD,CACEC,KAAK,UACLC,KAAK,QACLC,QA1GC,WACjBlE,EAAMmE,eAnBN1D,EAAmB,GACnBE,EAAqB,GACrBE,GAAe,GACfY,GAAgB,GAChBF,GAAe,IAqHD,6BASA,8BAtFR,8BACE,eAAC,IAAD,CAAK2B,OAAQ,GAAIC,MAAO,CAACC,aAAa,QAAtC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,4BACA,cAAC,IAAD,CACEA,UAAU,WACVK,YAAY,IACZC,SAAU,SAACC,GACT/C,EAAmB+C,EAAEC,OAAOC,eAKpC,cAAC,IAAD,CAAKL,KAAM,GAAX,SACE,qBAAKJ,UAAU,YAAf,SACE,cAAC,IAAD,CACEe,KAAK,UACLC,KAAK,QACLd,MAAO,CAAEiB,UAAW,QACpBF,QAzDI,WACpBrD,GAAe,GACfN,EAAYH,KAAKC,MAAQ,MACzBU,EAAWX,KAAKC,QAkDF,qCC/BH6G,GA7EJ5C,EAAQ,KAID,WAAM,MAEYnE,mBAAS,IAFrB,gCAGUA,mBAAS,IAHnB,gCAIQA,mBAAS,KAJjB,mBAIfkC,EAJe,aAKYlC,mBAAS,KALrB,gCAMYA,oBAAS,IANrB,mBAMf4C,EANe,KAMJ8B,EANI,OAOU1E,mBAAS,GAPnB,gCAQYA,oBAAS,IARrB,mBAQf2E,EARe,KAQJC,EARI,OASsB5E,mBAASC,KAAKC,MAAQ,KAT5C,gCAUsBF,mBAASC,KAAKC,MAAQ,MAV5C,mBAUfwB,EAVe,KAYhBsF,GAZgB,KAYA/G,KAAKC,MAAQ,KAC3BJ,EAAcC,IAAdD,UAwBR,OALAkC,qBAAU,cAEP,IAID,sBAAKc,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,2DACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,YAAf,SACG6B,EACC,qBAAKW,IAAKpB,2BAEV,qBAAKoB,IAAKpB,gCAKlB,qBAAKpB,UAAU,qBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAAChD,EAAD,CACE2C,MAAM,YACNc,MAAOyD,EACPtD,SA1CoB,WAC9BkB,GAAa,GACbF,GAAa,IAyCHf,OAAO,iBAKf,cAAC,EAAD,CACEf,UAAWA,EACXoB,aA7Ce,WACnBjG,OAAOC,SAASuH,OAAO,gBAEvBX,GAAa,GACbF,GAAa,IA0CThD,eAAgBA,EAChBQ,QAASA,S,kBCrDX+E,EAAiB,CACnBC,SAAU,CACNhE,KAAM,GAEViE,WAAY,CACRjE,KAAM,KA6DCkE,GAzDU3B,IAAjBD,MAAiBC,IAATC,KAEQ,WAAO,IAAD,EAEI1F,oBAAS,GAFb,6BAkB1B,OACI,eAAC,IAAD,2BAAUiH,GAAV,IAA0BI,OAAO,aAAa3D,SATjC,SAAC4D,GACd9H,QAAQC,IAAI,WAAY6H,IAQ0CC,eAL/C,SAACC,GACpBhI,QAAQC,IAAI,UAAW+H,IAIvB,UACE,cAAC,IAAKC,KAAN,CACEC,MAAM,WACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACV5B,QAAS,gCANf,SAUI,cAAC,IAAD,MAGJ,cAAC,IAAKwB,KAAN,CACEC,MAAM,WACNC,KAAK,WACLC,MAAO,CACL,CACEC,UAAU,EACV5B,QAAS,gCANf,SAUE,cAAC,IAAD,MAGF,cAAC,IAAKwB,KAAN,UACE,cAAC,IAAD,CAAQ5D,KAAK,UAAUiE,SAAS,SAAhC,4BCrDGC,EAhBA,WACb,OACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWvC,IACjC,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,aAAaC,UAAWnB,IAC1C,cAAC,IAAD,CAAOiB,OAAK,EAACC,KAAK,aAAaC,UAAWpB,IAC1C,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,eAAeC,UAAWd,IAC5C,cAAC,IAAD,CAAOY,OAAK,EAACC,KAAK,iBAAiBC,UAAWvB,IAC9C,cAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,YAAYC,UAAW9D,IACzC,cAAC,IAAD,CAAO4D,OAAK,EAACC,KAAK,OAAOC,UAAW5B,Q,SCL7B6B,MAVf,WACI,OACI,cAAC,IAAD,UACI,qBAAKrF,UAAU,MAAf,SACI,cAAC,EAAD,SCEDsF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjJ,MAAK,YAAkD,IAA/CkJ,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.26147ee0.chunk.js","sourcesContent":["let Api = '';\n\nif (!window.location.origin) {\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\n}\nswitch (process.env.NODE_ENV) {\n    case 'development':\n        Api = 'http://127.00.00.1:5000';  // Localhost\n        break;\n    case 'production':\n        Api = window.location.origin;\n        break;\n    default:\n        Api = window.location.origin;\n}\n\nexport {Api};","import { Api } from '../config/api';\n\nfunction parseJSON(response) {\n    return response\n}\n\n/**\n * Start Request\n *\n * @param {*url,*method,*data} options\n */\nexport function startReq(data) {\n    const options = {};\n    options.url = `${Api}/start`;\n    options.method = 'POST';\n    options.mode = 'cors';\n    options.body = JSON.stringify(data);\n    options.headers = {\n        'Content-Type': 'application/json;charset=UTF-8'\n    }\n    return fetch(options.url, options, { credentials: 'include' })\n        .then(response => response.json())\n        .then((res) => {\n            // returned items\n            console.log('success', res);\n            localStorage.setItem('user-id', res['user_id']);\n            return res;\n        })\n        .catch(err => ({ err }))\n}\n\n/**\n * Regular Requests\n * @param {*url,*method,*data} options \n */\nexport function request(options = {}) {\n    const user_id = localStorage.getItem('user-id')\n    const { data, url } = options\n    options = { ...options }\n    options.mode = 'cors'\n    delete options.url\n    if (data) {\n        delete options.data\n        options.body = JSON.stringify(data)\n    }\n    options.headers = {\n        'user-ID': user_id,\n        'Content-Type': 'application/json;charset=UTF-8',\n    }\n    \n    return fetch(url, options, { mode: 'cors', credentials: 'include'})\n        .then(parseJSON)\n        .then((res) => {\n            if (res.code === 200) {\n                return res;\n            }\n            else {\n                console.log('error', res);\n                return res;\n            }\n        })\n        .catch(err => ({ err }))\n}","import { Modal, Button, Row, Col, Statistic, Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { Api } from \"../../../config/api\";\nimport { request } from \"../../../utils/request\";\n\nconst PopupModal = (props) => {\n  const { Countdown } = Statistic;\n  const [deadline, setDeadline] = useState(Date.now() + 1000 * 1000);\n  const [firstEstimation, setFirstEstimation] = useState(0);\n  const [updatedEstimation, setUpdatedEstimation] = useState(0);\n  const [firstConfirm, setFirstConfim] = useState(false);\n  const [nowTime, setNowTime] = useState(Date.now());\n  const [userInputTime, setUserInputTime] = useState(Date.now());\n  const [questionId, setQuestionId] = useState(\"\");\n  const [AISuggestion, setAISuggestion] = useState(0);\n  const [showNextBtn, setShowNextBtn] = useState(false);\n  const [inputDiabled, setInputDiabled] = useState(false);\n\n  const handleCountdownFinished = () => {\n    if (updatedEstimation === 0) {\n      setUpdatedEstimation(firstEstimation);\n      storeData(firstEstimation);\n    } else {\n      storeData(updatedEstimation);\n    }\n    setShowNextBtn(true);\n    setInputDiabled(true);\n  };\n\n  const storeData = (passInUpdated) => {\n    let responseTime = 0;\n    if(userInputTime === 0) responseTime = props.modalCountDown;\n    else responseTime = userInputTime\n    let data = {\n      user_id: localStorage.getItem(\"user-id\"),\n      q_id: questionId,\n      resp_time: responseTime,\n      init_guess: firstEstimation,\n      final_guess: passInUpdated,\n    };\n\n    request({ url: `${Api}/answer`, method: \"POST\", data: data }).then((res) => {\n      console.log(res);\n    });\n  };\n\n  const getAISuggestion = (qId) => {\n    let url = `${Api}/imageInfo?q_id=` + qId;\n    request({ url: url, method: \"GET\" })\n      .then((response) => response.json())\n      .then((res) => {\n        let aiSugg = res[\"ai\"];\n        console.log(\"aiSugg\", aiSugg)\n        setAISuggestion(aiSugg);\n  })};\n\n  // const getAISuggestion = () => {\n  //   let url = `${Api}imageInfo?q_id=` + localStorage.getItem(\"q_id\");\n  //   console.log(\"question_id\", localStorage.getItem(\"q_id\"));\n  //   request({ url: url, method:\"GET\"})\n  //   .then(response => response.json())\n  //   .then(\n  //     res => {\n  //       let aiSugg = res['ai'];\n\n  //       setAISuggestion(aiSugg);\n  //     });\n  // };\n\n  const clearModal = () => {\n    setFirstEstimation(0);\n    setUpdatedEstimation(0);\n    setFirstConfim(false);\n    setInputDiabled(false);\n    setShowNextBtn(false);\n    setUserInputTime(0);\n  };\n\n  const handleConfirm = () => {\n    setFirstConfim(true);\n    setDeadline(Date.now() + 1000 * props.modalCountDown);\n    setNowTime(Date.now());\n  };\n\n  const handleUpdateInput = (e) => {\n    setUpdatedEstimation(e.target.value);\n    setUserInputTime(((Date.now() - nowTime) / 1000).toFixed(2));\n  };\n\n  const handleNext = () =>{\n    props.modalTimesUp();\n    clearModal();\n  };\n\n  useEffect(() => {\n    if(props.imgName === undefined ) return;\n    let qId = props.imgName.split(\".\")[0];\n    if(qId.length !== 0){\n      setQuestionId(qId);\n      getAISuggestion(qId); \n    }\n    \n\n    // localStorage.setItem('q_id', props.imgName[0] + props.imgName[1]);\n    // // setQuestionId(props.imgName[0] + props.imgName[1]);\n    // console.log(\"question_id saved\", localStorage.getItem(\"q_id\"));\n    // getAISuggestion();\n  }, [props.imgName]);\n\n  return (\n    <Modal\n      title=\"AI suggestion dialog\"\n      centered\n      visible={props.openModal}\n      footer={null}\n    >\n      <div className=\"pop-container\">\n        <div>\n          Please provide your best estimate of the number of penguins you saw in\n          the image.\n        </div>\n        {!firstConfirm ? (\n          <div>\n            <Row gutter={16} style={{marginBottom:\"40px\"}}>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">Your estimate:</div>\n                  <Input\n                    className=\"text-box\"\n                    placeholder=\"0\"\n                    onChange={(e) => {\n                      setFirstEstimation(e.target.value);\n                    }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    style={{ marginTop: \"42px\" }}\n                    onClick={handleConfirm}\n                  >\n                    Confirm\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        ) : (\n          <div>\n            <Row gutter={16} style={{marginBottom:\"40px\"}}>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">Your estimate:</div>\n                  <div className=\"text-box\">{firstEstimation}</div>\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">AI's suggestion:</div>\n                  <div className=\"text-box\">{AISuggestion}</div>\n                </div>\n              </Col>\n            </Row>\n\n            <div className=\"lower-modal\">\n              <div>\n                Would you like to update your answer based on the AI's\n                suggestion?\n              </div>\n              <Row gutter={0} style={{marginBottom:\"40px\"}}>\n                <Col span={12}>\n                  <div className=\"modal-col\">\n                    <div className=\"estimate-text\">Update your estimate:</div>\n                    <Input\n                      className=\"text-box\"\n                      placeholder={firstEstimation}\n                      onChange={handleUpdateInput}\n                      disabled={inputDiabled}\n                    />\n                  </div>\n                </Col>\n                <Col span={12}>\n                  <div className=\"modal-col\">\n                    <div className=\"estimate-text\">\n                      <Countdown\n                        title=\"Countdown\"\n                        value={deadline}\n                        onFinish={handleCountdownFinished}\n                        format=\"mm:ss\"\n                      />\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              {showNextBtn ? (\n                  <div style={{textAlign:\"center\"}}>\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    onClick={handleNext}\n                  >\n                    Next Image\n                  </Button>\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PopupModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Select, Statistic } from \"antd\";\nimport \"./css/mainPage.css\";\nimport { attributesValue } from \"../../data/data.js\";\nimport PopupModal from \"./components/PopupModal\";\nimport { Api } from '../../config/api';\nimport { request } from \"../../utils/request\";\nconst fs = require(\"fs\");\n\nconst baseImgUrl = \"/static/img/\";\n\nconst MainPage = () => {\n  //   const dispatch = useDispatch();\n  const [valueList, setValueList] = useState([]);\n  const [imgIndex, setImgIndex] = useState(0);\n  const [imgName, setImgName] = useState(\"\");\n  const [imageList, setImageList] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [deadline, setDeadline] = useState(0);\n  const [deleteImg, setDeleteImg] = useState(false);\n  const [firstCountDown, setFirstCountDown] = useState(Date.now() + 1000 * 1000);\n  const [modalCountDown, setModalCountDown] = useState(Date.now() + 1000 * 1000);\n\n  const deadlineValue = Date.now() + 1000 * 2;\n  const { Countdown } = Statistic;\n\n  const handleCountdownFinished = () => {\n    setDeleteImg(true);\n    setOpenModal(true);\n  };\n\n  const modalTimesUp = () => {\n    if(imgIndex >= imageList.length - 1){\n      window.location.assign(\"/#/questionnaire\");\n    }\n\n    setDeleteImg(false);\n    setOpenModal(false);\n    setImgName(imageList[imgIndex + 1]);\n    setImgIndex(imgIndex + 1);\n    \n    // setDeadline(Date.now() + 1000 * 2);\n  };\n\n  const getUserData = () => {\n    let url = `${Api}/userInfo?userID=` + localStorage.getItem(\"user-id\");\n    request({ url: url, method:\"GET\"})\n    .then(response => response.json())\n    .then(\n      res => {\n        console.log(\"success\", res);\n        let imageString = res['q_order']\n        formatImageList(imageString);\n        setModalCountDown(res['timing']);\n        if(imageString[0] === \"E\"){setFirstCountDown(Date.now() + 1000*5);}\n        else {setFirstCountDown(Date.now() + 1000*10);}\n      }\n    );\n  };\n\n  const formatImageList = (imageString) =>{\n    let strList = imageString.split(\" \");\n    let imgList = [];\n\n    for(let str of strList){\n      str += \".jpg\";\n      imgList.push(str);\n    }\n    setImgName(imgList[0]);\n    setImageList(imgList);\n  }\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  useEffect(()=>{\n    if(imgName !== undefined && imgName[0] === \"E\")\n      setFirstCountDown(Date.now() + 1000 * 5);\n    else if(imgName !== undefined && imgName[0] === \"H\")\n    setFirstCountDown(Date.now() + 1000 * 10);\n  },[imgName])\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"title\">Counting penguins with AI assistance</div>\n      <div className=\"row\">\n        <div className=\"column left-panel\">\n          <div className=\"img-frame-container\">\n            <div className=\"img-frame\">\n              {deleteImg ? (\n                <img src={baseImgUrl + \"blank.jpeg\"}></img>\n              ) : (\n                <img src={baseImgUrl + imageList[imgIndex]}></img>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"column right-panel\">\n          <div className=\"countdown-container\">\n            <Countdown\n              title=\"Countdown\"\n              value={firstCountDown}\n              onFinish={handleCountdownFinished}\n              format=\"mm:ss\"\n            />\n          </div>\n        </div>\n      </div>\n      <PopupModal\n        openModal={openModal}\n        modalTimesUp={modalTimesUp}\n        modalCountDown={modalCountDown}\n        imgName={imgName}\n      ></PopupModal>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React, { useState } from 'react';\n\nimport { startReq } from '../../utils/request.js';\nimport { Button, Checkbox, message, Typography} from \"antd\";\n\nimport \"./css/starterPage.css\";\n\nconst { Title,  Text } = Typography;\n\nconst StarterPage = () => {\n\n    const [consent, setConsent] = useState(false);\n\n    const start = () => {\n        if(consent === true){\n            console.log(\"Start Study\")\n            startReq({ consent: 1}).then(window.location.assign(\"/#/trailPage\"))\n        }\n        else{\n            message.warning('Need to give consent to participate in the study.');\n        }\n    };\n\n    function onChange(e) {\n        console.log(`consent = ${e.target.checked}`);\n        setConsent(e.target.checked);\n    }\n\n    return (\n        <div className=\"page-container\">\n          <Title level={3}>Counting Penguins with AI assistance</Title>\n            <Text level={5}>You are being asked to join a study for a course project at Johns Hopkins University. Participation in this study is voluntary and you will not receive any compensation. Even if you decide to join now, you can change your mind later. If you want to stop your participation in the study, you can simply close the browser. The  study tasks can be completed within 8-10 minutes. The records and data from the study will only be reviewed by team members involved in the project. We will not ask for information that identifies you, thus, your responses cannot be associated with your identity. By clicking next you accept these conditions, and you agree to  join the study.\n            </Text>\n            <div className='checkboxMessage'>\n                <Checkbox onChange={onChange}>\n                    I give my consent for my data to be used for the study\n                </Checkbox>\n            </div>\n\n            <div>\n                <Button\n                    type=\"primary\"\n                    size=\"medium\"\n                    style={{ margin: '0 10px' }}\n                    onClick={() => start()}\n                >\n                    Start Study\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default StarterPage;\n","import { Result, Button } from 'antd';\n\nconst PageNotFound = (props) => {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Button type=\"primary\" onClick={() => props.history.push(\"/\")}>Back Home</Button>}\n        />\n    )\n}\n\nexport default PageNotFound;","import React, { useEffect, useState } from \"react\";\nimport { Input } from \"antd\";\n\nimport { startReq } from \"../../utils/request.js\";\n\nimport \"./css/questionPage.css\";\n\nconst QuestionPage = () => {\n  useEffect(()=>{\n\n  },[])\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"title\">Questionnaire</div>\n      <div style={{fontSize:\"22px\"}}>\n        Here is your user id, you will need it for completing the form\n        below(link):{\" \"}\n      </div>\n      <Input className=\"id-text-box\" value={localStorage.getItem(\"user-id\")}/>\n      <div><a href=\"https://forms.gle/Ry6HT68adeZ8ihCv8\" target=\"_blank\">https://forms.gle/Ry6HT68adeZ8ihCv8</a></div>\n    </div>\n  );\n};\n\nexport default QuestionPage;\n","import React, { useState } from 'react';\n\nimport { Button} from \"antd\";\nimport \"./css/readyPage.css\";\n\nconst ReadyPage = () => {\n\n    const handleBtn = () =>{\n        window.location.assign(\"/#/mainPage\")\n    }\n\n    return (\n        <div className=\"ready-page-container\">\n          <div className=\"title\">Now you have mastered our application, click the button below to start the real test.</div>\n          <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    onClick={handleBtn}\n                  >\n                    Start Test\n                  </Button>\n        </div>\n    );\n};\n\nexport default ReadyPage;\n","import { Modal, Button, Row, Col, Statistic, Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { Api } from \"../../../config/api\";\nimport { request } from \"../../../utils/request\";\n\nconst PopupModal = (props) => {\n  const { Countdown } = Statistic;\n  const [deadline, setDeadline] = useState(Date.now() + 1000 * 1000);\n  const [firstEstimation, setFirstEstimation] = useState(0);\n  const [updatedEstimation, setUpdatedEstimation] = useState(0);\n  const [firstConfirm, setFirstConfim] = useState(false);\n  const [nowTime, setNowTime] = useState(Date.now());\n  const [userInputTime, setUserInputTime] = useState(Date.now());\n  const [questionId, setQuestionId] = useState(\"\");\n  const [AISuggestion, setAISuggestion] = useState(0);\n  const [showNextBtn, setShowNextBtn] = useState(false);\n  const [inputDiabled, setInputDiabled] = useState(false);\n\n  const handleCountdownFinished = () => {\n    if (updatedEstimation === 0) {\n      setUpdatedEstimation(firstEstimation);\n      storeData(firstEstimation);\n    } else {\n      storeData(updatedEstimation);\n    }\n    setShowNextBtn(true);\n    setInputDiabled(true);\n  };\n\n  const storeData = (passInUpdated) => {\n    let data = {\n      user_id: localStorage.getItem(\"user-id\"),\n      q_id: questionId,\n      resp_time: userInputTime,\n      init_guess: firstEstimation,\n      final_guess: passInUpdated,\n    };\n    request({ url: `${Api}/answer`, method: \"POST\", data: data }).then((res) => {\n      console.log(res);\n    });\n  };\n\n  const getAISuggestion = (qId) => {\n    let url = `${Api}/imageInfo?q_id=` + qId;\n    request({ url: url, method: \"GET\" })\n      .then((response) => response.json())\n      .then((res) => {\n        let aiSugg = res[\"ai\"];\n        setAISuggestion(aiSugg);\n      });\n  };\n\n  const clearModal = () => {\n    setFirstEstimation(0);\n    setUpdatedEstimation(0);\n    setFirstConfim(false);\n    setInputDiabled(false);\n    setShowNextBtn(false);\n  };\n\n  const handleConfirm = () => {\n    setFirstConfim(true);\n    setDeadline(Date.now() + 1000 * 15);\n    setNowTime(Date.now());\n  };\n\n  const handleUpdateInput = (e) => {\n    setUpdatedEstimation(e.target.value);\n    setUserInputTime(((Date.now() - nowTime) / 1000).toFixed(2));\n  };\n\n  const handleNext = () =>{\n    props.modalTimesUp();\n    clearModal();\n  };\n\n  useEffect(() => {\n    console.log(\"Once\")\n    if(props.imgName === undefined ) return;\n    let qId = props.imgName.split(\".\")[0];\n    setQuestionId(qId);\n    // getAISuggestion(qId); \n  }, [props.imgName]);\n\n  return (\n    <Modal\n      title=\"AI suggestion dialog\"\n      centered\n      visible={props.openModal}\n      footer={null}\n    >\n      <div className=\"pop-container\">\n        <div>\n          Please provide your best estimate of the number of penguins you saw in\n          the image.\n        </div>\n        {!firstConfirm ? (\n          <div>\n            <Row gutter={16} style={{marginBottom:\"40px\"}}>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">Your estimate:</div>\n                  <Input\n                    className=\"text-box\"\n                    placeholder=\"0\"\n                    onChange={(e) => {\n                      setFirstEstimation(e.target.value);\n                    }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    style={{ marginTop: \"42px\" }}\n                    onClick={handleConfirm}\n                  >\n                    Confirm\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        ) : (\n          <div>\n            <Row gutter={16} style={{marginBottom:\"40px\"}}>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">Your estimate:</div>\n                  <div className=\"text-box\">{firstEstimation}</div>\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">AI's suggestion:</div>\n                  <div className=\"text-box\">25</div>\n                </div>\n              </Col>\n            </Row>\n\n            <div className=\"lower-modal\">\n              <div>\n                Would you like to update your answer based on the AI's\n                suggestion?\n              </div>\n              <Row gutter={0} style={{marginBottom:\"40px\"}}>\n                <Col span={12}>\n                  <div className=\"modal-col\">\n                    <div className=\"estimate-text\">Update your estimate:</div>\n                    <Input\n                      className=\"text-box\"\n                      placeholder={firstEstimation}\n                      onChange={handleUpdateInput}\n                      disabled={inputDiabled}\n                    />\n                  </div>\n                </Col>\n                <Col span={12}>\n                  <div className=\"modal-col\">\n                    <div className=\"estimate-text\">\n                      <Countdown\n                        title=\"Countdown\"\n                        value={deadline}\n                        onFinish={handleCountdownFinished}\n                        format=\"mm:ss\"\n                      />\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              {showNextBtn ? (\n                  <div style={{textAlign:\"center\"}}>\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    onClick={handleNext}\n                  >\n                    Finish Tryout\n                  </Button>\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PopupModal;\n","import React, { useEffect, useState } from \"react\";\nimport { Statistic } from \"antd\";\nimport \"./css/trailPage.css\";\nimport PopupModal from \"./components/PopupModal\";\nimport { request } from \"../../utils/request\";\nconst fs = require(\"fs\");\n\nconst baseImgUrl = \"/static/img/\";\n\nconst TrailPage = () => {\n  //   const dispatch = useDispatch();\n  const [valueList, setValueList] = useState([]);\n  const [imgIndex, setImgIndex] = useState(0);\n  const [imgName, setImgName] = useState(\"\");\n  const [imageList, setImageList] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [deadline, setDeadline] = useState(0);\n  const [deleteImg, setDeleteImg] = useState(false);\n  const [firstCountDown, setFirstCountDown] = useState(Date.now() + 1000 * 1000);\n  const [modalCountDown, setModalCountDown] = useState(Date.now() + 1000 * 1000);\n\n  const deadlineValue = Date.now() + 1000 * 10;\n  const { Countdown } = Statistic;\n\n  const handleCountdownFinished = () => {\n    setDeleteImg(true);\n    setOpenModal(true);\n  };\n\n  const modalTimesUp = () => {\n    window.location.assign(\"/#/readyPage\");\n  \n    setDeleteImg(false);\n    setOpenModal(false);\n    // setImgName(imageList[imgIndex + 1]);\n    // setImgIndex(imgIndex + 1);\n    \n    // setDeadline(Date.now() + 1000 * 2);\n  };\n\n\n  useEffect(() => {\n    \n  }, []);\n\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"title\">Counting penguins with AI assistance (Tryout)</div>\n      <div className=\"row\">\n        <div className=\"column left-panel\">\n          <div className=\"img-frame-container\">\n            <div className=\"img-frame\">\n              {deleteImg ? (\n                <img src={baseImgUrl + \"blank.jpeg\"}></img>\n              ) : (\n                <img src={baseImgUrl + \"trail.jpg\"}></img>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"column right-panel\">\n          <div className=\"countdown-container\">\n            <Countdown\n              title=\"Countdown\"\n              value={deadlineValue}\n              onFinish={handleCountdownFinished}\n              format=\"mm:ss\"\n            />\n          </div>\n        </div>\n      </div>\n      <PopupModal\n        openModal={openModal}\n        modalTimesUp={modalTimesUp}\n        modalCountDown={modalCountDown}\n        imgName={imgName}\n      ></PopupModal>\n    </div>\n  );\n};\n\nexport default TrailPage;\n","import React, { useState } from 'react';\n\nimport \"./index.css\";\n\nimport { request } from '../../utils/request.js';\nimport { Button, Checkbox, message, Typography, Form, Input} from \"antd\";\n\nconst layout = {\n  labelCol: {\n    span: 8,\n  },\n  wrapperCol: {\n    span: 16,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 16,\n  },\n};\n\nconst formItemLayout = {\n    labelCol: {\n        span: 4,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst { Title,  Text } = Typography;\n\nconst DemographicPage = () => {\n\n    const [consent, setConsent] = useState(false);\n\n\n    function onChange(e) {\n        console.log(`consent = ${e.target.checked}`);\n        setConsent(e.target.checked);\n    }\n\n    const onFinish = (values) => {\n        console.log('Success:', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Form {...formItemLayout} layout='horizontal' onFinish={onFinish} onFinishFailed={onFinishFailed}>\n          <Form.Item\n            label=\"Username\"\n            name=\"username\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your username!',\n              },\n            ]}\n          >\n              <Input />\n          </Form.Item>\n\n          <Form.Item\n            label=\"Password\"\n            name=\"password\"\n            rules={[\n              {\n                required: true,\n                message: 'Please input your password!',\n              },\n            ]}\n          >\n            <Input />\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n    );\n};\n\nexport default DemographicPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router';\n\nimport MainPage from \"../../pages/MainPage/MainPage\";\nimport StarterPage from \"../../pages/StarterPage/StarterPage\";\nimport PageNotFound from '../../pages/404';\nimport QuestionPage from \"../../pages/QuestionPage/QuestionPage\";\nimport ReadyPage from \"../../pages/ReadyPage/ReadyPage\";\nimport TrailPage from \"../../pages/TrailPage/TrailPage\"\nimport DemographicPage from \"../../pages/DemographicPage/DemographicPage\";\n\n\nconst Router = () => {\n  return (\n    <Switch>\n        <Route exact path=\"/\" component={StarterPage} />\n        <Route exact path=\"/trailPage\" component={TrailPage} />\n        <Route exact path=\"/readyPage\" component={ReadyPage} />\n        <Route exact path=\"/demographic\" component={DemographicPage} />\n        <Route exact path=\"/questionnaire\" component={QuestionPage} />\n        <Route exact path=\"/mainpage\" component={MainPage} />\n        <Route exact path=\"/404\" component={PageNotFound} />\n\n    </Switch>\n  )\n}\n\n\nexport default Router;","import './App.css';\n\nimport Route from './components/route/route';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Route />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}