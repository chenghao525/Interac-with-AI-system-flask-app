{"version":3,"sources":["config/api.js","utils/request.js","pages/MainPage/components/PopupModal.js","pages/MainPage/MainPage.js","pages/StarterPage/StarterPage.js","pages/404/index.js","pages/QuestionPage/QuestionPage.js","pages/ReadyPage/ReadyPage.js","pages/TrailPage/components/PopupModal.js","pages/TrailPage/TrailPage.js","pages/DemographicPage/DemographicPage.js","pages/EndingSurveyPage/EndingSurveyPage.js","pages/InstructionPage/InstructionPage.js","pages/LastPage/LastPage.js","components/route/route.js","App.js","reportWebVitals.js","index.js"],"names":["Api","window","location","origin","protocol","hostname","port","parseJSON","response","request","options","user_id","localStorage","getItem","data","url","mode","body","JSON","stringify","headers","fetch","credentials","then","res","code","console","log","catch","err","PopupModal","props","Countdown","Statistic","useState","Date","now","deadline","setDeadline","firstEstimation","setFirstEstimation","updatedEstimation","setUpdatedEstimation","firstConfirm","setFirstConfim","nowTime","setNowTime","userInputTime","setUserInputTime","questionId","setQuestionId","AISuggestion","setAISuggestion","showNextBtn","setShowNextBtn","inputDiabled","setInputDiabled","storeData","passInUpdated","responseTime","modalCountDown","q_id","resp_time","init_guess","final_guess","ai_suggestion","method","useEffect","undefined","imgName","qId","split","length","json","aiSugg","getAISuggestion","title","centered","visible","openModal","footer","className","gutter","style","marginBottom","span","placeholder","onChange","e","target","value","toFixed","disabled","onFinish","format","textAlign","type","size","onClick","modalTimesUp","marginTop","baseImgUrl","require","MainPage","imgIndex","setImgIndex","setImgName","imageList","setImageList","setOpenModal","deleteImg","setDeleteImg","firstCountDown","setFirstCountDown","firstCountDownTime","setFirstCountDownTime","setModalCountDown","formatImageList","imageString","strList","imgList","str","push","src","onLoad","assign","Title","Typography","Text","StarterPage","consent","setConsent","start","setItem","startReq","message","warning","level","checked","margin","PageNotFound","status","subTitle","extra","history","QuestionPage","fontSize","href","ReadyPage","TrailPage","formItemLayout","labelCol","wrapperCol","DemographicPage","Form","useForm","form","handleFormSubmit","a","validateFields","values","errorInfo","layout","Item","name","label","rules","required","Option","allowClear","offset","EndingSurveyPage","fontWeight","Group","defaultValue","InstructionPage","justify","LastPage","Router","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+eAAIA,EAAM,GAELC,OAAOC,SAASC,SACnBF,OAAOC,SAASC,OAASF,OAAOC,SAASE,SAAW,KAAOH,OAAOC,SAASG,UAAYJ,OAAOC,SAASI,KAAO,IAAML,OAAOC,SAASI,KAAM,KAOpIN,EAAMC,OAAOC,SAASC,O,YCR9B,SAASI,EAAUC,GACf,OAAOA,EAgCJ,SAASC,IAAuB,IAAfC,EAAc,uDAAJ,GACxBC,EAAUC,aAAaC,QAAQ,WADH,EAEZH,EAAdI,EAF0B,EAE1BA,KAAMC,EAFoB,EAEpBA,IAad,OAZAL,EAAO,eAAQA,IACPM,KAAO,cACRN,EAAQK,IACXD,WACOJ,EAAQI,KACfJ,EAAQO,KAAOC,KAAKC,UAAUL,IAElCJ,EAAQU,QAAU,CACd,UAAWT,EACX,eAAgB,kCAGbU,MAAMN,EAAKL,EAAS,CAAEM,KAAM,OAAQM,YAAa,YACnDC,KAAKhB,GACLgB,MAAK,SAACC,GACH,OAAiB,MAAbA,EAAIC,MAIJC,QAAQC,IAAI,QAASH,GAHdA,KAOdI,OAAM,SAAAC,GAAG,MAAK,CAAEA,U,WC8JVC,EAtNI,SAACC,GAAW,IACrBC,EAAcC,IAAdD,UADoB,EAEIE,mBAASC,KAAKC,MAAQ,KAF1B,mBAErBC,EAFqB,KAEXC,EAFW,OAGkBJ,mBAAS,GAH3B,mBAGrBK,EAHqB,KAGJC,EAHI,OAIsBN,mBAAS,GAJ/B,mBAIrBO,EAJqB,KAIFC,EAJE,OAKWR,oBAAS,GALpB,mBAKrBS,EALqB,KAKPC,EALO,OAMEV,mBAASC,KAAKC,OANhB,mBAMrBS,EANqB,KAMZC,EANY,OAOcZ,mBAASC,KAAKC,OAP5B,mBAOrBW,EAPqB,KAONC,EAPM,OAQQd,mBAAS,IARjB,mBAQrBe,EARqB,KAQTC,EARS,OASYhB,mBAAS,GATrB,mBASrBiB,EATqB,KASPC,EATO,OAUUlB,oBAAS,GAVnB,mBAUrBmB,EAVqB,KAURC,EAVQ,OAWYpB,oBAAS,GAXrB,mBAWrBqB,EAXqB,KAWPC,EAXO,KAwBtBC,EAAY,SAACC,GACjB,IAAIC,EAAe,EACKA,EAAH,IAAlBZ,EAAoChB,EAAM6B,eACzBb,EACpB,IAAIjC,EAAO,CACTH,QAASC,aAAaC,QAAQ,WAC9BgD,KAAMZ,EACNa,UAAWH,EACXI,WAAYxB,EACZyB,YAAaN,EACbO,cAAed,GAGjB1C,EAAQ,CAAEM,IAAI,GAAD,OAAKf,EAAL,WAAmBkE,OAAQ,OAAQpD,KAAMA,IAAQS,MAAK,SAACC,GAClEE,QAAQC,IAAIH,OAmEhB,OAfA2C,qBAAU,WACR,QAAqBC,IAAlBrC,EAAMsC,QAAT,CACA,IAAIC,EAAMvC,EAAMsC,QAAQE,MAAM,KAAK,GACjB,IAAfD,EAAIE,SACLtB,EAAcoB,GApDM,SAACA,GAEvB7D,EAAQ,CAAEM,IADA,UAAGf,EAAH,oBAA2BsE,EACjBJ,OAAQ,QACzB3C,MAAK,SAACf,GAAD,OAAcA,EAASiE,UAC5BlD,MAAK,SAACC,GACL,IAAIkD,EAASlD,EAAG,GAChBE,QAAQC,IAAI,SAAU+C,GACtBtB,EAAgBsB,MA8ClBC,CAAgBL,OAQjB,CAACvC,EAAMsC,UAGR,cAAC,IAAD,CACEO,MAAM,uBACNC,UAAQ,EACRC,QAAS/C,EAAMgD,UACfC,OAAQ,KAJV,SAME,sBAAKC,UAAU,gBAAf,UACE,oHAIEtC,EA8BA,gCACE,eAAC,IAAD,CAAKuC,OAAQ,GAAIC,MAAO,CAACC,aAAa,QAAtC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,4BACA,qBAAKA,UAAU,WAAf,SAA2B1C,SAG/B,cAAC,IAAD,CAAK8C,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,8BACA,qBAAKA,UAAU,WAAf,SAA2B9B,YAKjC,sBAAK8B,UAAU,cAAf,UACE,qGAIA,eAAC,IAAD,CAAKC,OAAQ,EAAGC,MAAO,CAACC,aAAa,QAArC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,mCACA,cAAC,IAAD,CACEA,UAAU,WACVK,YAAa/C,EACbgD,SA/FM,SAACC,GACzB9C,EAAqB8C,EAAEC,OAAOC,OAC9B1C,IAAmBb,KAAKC,MAAQS,GAAW,KAAM8C,QAAQ,KA8FvCC,SAAUrC,SAIhB,cAAC,IAAD,CAAK8B,KAAM,GAAX,SACE,qBAAKJ,UAAU,YAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,cAACjD,EAAD,CACE4C,MAAM,YACNc,MAAOrD,EACPwD,SA7KU,WACJ,IAAtBpD,GACFC,EAAqBH,GACrBkB,EAAUlB,IAEVkB,EAAUhB,GAEZa,GAAe,GACfE,GAAgB,IAsKIsC,OAAO,mBAMhBzC,EACG,qBAAK8B,MAAO,CAACY,UAAU,UAAvB,SACA,cAAC,IAAD,CACEC,KAAK,UACLC,KAAK,QACLC,QAjHC,WACjBnE,EAAMoE,eApBN3D,EAAmB,GACnBE,EAAqB,GACrBE,GAAe,GACfY,GAAgB,GAChBF,GAAe,GACfN,EAAiB,IA4HH,0BASA,8BAtFR,8BACE,eAAC,IAAD,CAAKkC,OAAQ,GAAIC,MAAO,CAACC,aAAa,QAAtC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,4BACA,cAAC,IAAD,CACEA,UAAU,WACVK,YAAY,IACZC,SAAU,SAACC,GACThD,EAAmBgD,EAAEC,OAAOC,eAKpC,cAAC,IAAD,CAAKL,KAAM,GAAX,SACE,qBAAKJ,UAAU,YAAf,SACE,cAAC,IAAD,CACEe,KAAK,UACLC,KAAK,QACLd,MAAO,CAAEiB,UAAW,QACpBF,QAhEI,WACpBtD,GAAe,GACfN,EAAYH,KAAKC,MAAQ,IAAOL,EAAM6B,gBACtCd,EAAWX,KAAKC,QAyDF,oCCjIZiE,GAFKC,EAAQ,KAEA,gBAuHJC,EArHE,WAAM,MAEarE,mBAAS,IAFtB,gCAGWA,mBAAS,IAHpB,mBAGdsE,EAHc,KAGJC,EAHI,OAISvE,mBAAS,IAJlB,mBAIdmC,EAJc,KAILqC,EAJK,OAKaxE,mBAAS,IALtB,mBAKdyE,EALc,KAKHC,EALG,OAMa1E,oBAAS,GANtB,mBAMd6C,EANc,KAMH8B,EANG,OAOW3E,mBAAS,GAPpB,gCAQaA,oBAAS,IARtB,mBAQd4E,EARc,KAQHC,EARG,OASuB7E,mBAASC,KAAKC,MAAQ,KAT7C,mBASd4E,EATc,KASEC,EATF,OAU+B/E,mBAASC,KAAKC,MAAQ,KAVrD,mBAUd8E,EAVc,KAUMC,EAVN,OAWuBjF,mBAASC,KAAKC,MAAQ,KAX7C,mBAWdwB,EAXc,KAWEwD,EAXF,KAcbpF,GADcG,KAAKC,MACLH,IAAdD,WAsCFqF,EAAkB,SAACC,GACvB,IADsC,EAClCC,EAAUD,EAAY/C,MAAM,KAC5BiD,EAAU,GAFwB,cAIvBD,GAJuB,IAItC,IAAI,EAAJ,qBAAuB,CAAC,IAAhBE,EAAe,QACrBA,GAAO,QACPD,EAAQE,KAAKD,IANuB,8BAQtCf,EAAWc,EAAQ,IACnBZ,EAAaY,IAoBf,OAbArD,qBAAU,WAhCR1D,EAAQ,CAAEM,IADA,UAAGf,EAAH,qBAA4BY,aAAaC,QAAQ,WACvCqD,OAAO,QAC1B3C,MAAK,SAAAf,GAAQ,OAAIA,EAASiE,UAC1BlD,MACC,SAAAC,GACEE,QAAQC,IAAI,UAAWH,GACvB,IAAI8F,EAAc9F,EAAG,QACrB6F,EAAgBC,GAChBF,EAAkB5F,EAAG,QAGC,MAAnB8F,EAAY,GAAYH,EAAsB,GAC3CA,EAAsB,SAuB/B,IAEHhD,qBAAU,gBACOC,IAAZC,GAAwC,MAAfA,EAAQ,GAElC8C,EAAsB,QACJ/C,IAAZC,GAAwC,MAAfA,EAAQ,IAEvC8C,EAAsB,MACxB,CAAC9C,IAGD,sBAAKY,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,kDACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,YAAf,SACG6B,EACC,qBAAKa,IAAKtB,EAAa,eAEvB,qBAAKsB,IAAKtB,EAAaM,EAAUH,GAAWoB,OA3BhC,WACxBX,EAAkB9E,KAAKC,MAAQ,IAAK8E,YA+BhC,qBAAKjC,UAAU,qBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAACjD,EAAD,CACE4C,MAAM,YACNc,MAAOsB,EACPnB,SArFoB,WAC9BkB,GAAa,GACbF,GAAa,IAoFHf,OAAO,iBAKf,cAAC,EAAD,CACEf,UAAWA,EACXoB,aAxFe,WAChBK,GAAYG,EAAUnC,OAAS,GAChCvE,OAAOC,SAAS2H,OAAO,aAGzBd,GAAa,GACbF,GAAa,GACbH,EAAWC,EAAUH,EAAW,IAChCC,EAAYD,EAAW,IAiFnB5C,eAAgBA,EAChBS,QAASA,Q,2BCpHTyD,G,OAAiBC,IAAjBD,OAAQE,EAASD,IAATC,KA+CDC,EA7CK,WAAO,IAAD,EAEQ/F,oBAAS,GAFjB,mBAEfgG,EAFe,KAENC,EAFM,KAIhBC,EAAQ,YACK,IAAZF,GACCxG,QAAQC,IAAI,eHJjB,SAAkBb,GACrB,IAAMJ,EAAU,GAQhB,OAPAA,EAAQK,IAAR,UAAiBf,EAAjB,UACAU,EAAQwD,OAAS,OACjBxD,EAAQM,KAAO,OACfN,EAAQO,KAAOC,KAAKC,UAAUL,GAC9BJ,EAAQU,QAAU,CACd,eAAgB,kCAEbC,MAAMX,EAAQK,IAAKL,EAAS,CAAEY,YAAa,YAC7CC,MAAK,SAAAf,GAAQ,OAAIA,EAASiE,UAC1BlD,MAAK,SAACC,GAIH,OAFAE,QAAQC,IAAI,UAAWH,GACvBZ,aAAayH,QAAQ,UAAW7G,EAAG,SAC5BA,KAEVI,OAAM,SAAAC,GAAG,MAAK,CAAEA,UGZbyG,CAAS,CAAEJ,QAAS,IACf3G,KAAKtB,OAAOC,SAAS2H,OAAO,oBAGjCU,IAAQC,QAAQ,sDASxB,OACI,sBAAKvD,UAAU,iBAAf,UACE,cAAC6C,EAAD,CAAOW,MAAO,EAAd,kDACE,cAACT,EAAD,CAAMS,MAAO,EAAb,2qBAEA,qBAAKxD,UAAU,kBAAf,SACI,cAAC,IAAD,CAAUM,SAXtB,SAAkBC,GACd9D,QAAQC,IAAR,oBAAyB6D,EAAEC,OAAOiD,UAClCP,EAAW3C,EAAEC,OAAOiD,UASZ,sEAKJ,8BACI,cAAC,IAAD,CACI1C,KAAK,UACLC,KAAK,SACLd,MAAO,CAAEwD,OAAQ,UACjBzC,QAAS,kBAAMkC,KAJnB,+B,SC5BDQ,EAXM,SAAC7G,GAClB,OACI,cAAC,IAAD,CACI8G,OAAO,MACPjE,MAAM,MACNkE,SAAS,8CACTC,MAAO,cAAC,IAAD,CAAQ/C,KAAK,UAAUE,QAAS,kBAAMnE,EAAMiH,QAAQtB,KAAK,MAAzD,0BCiBJuB,G,OAlBM,WAKnB,OAJA9E,qBAAU,cAER,IAGA,sBAAKc,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,2BACA,sBAAKE,MAAO,CAAC+D,SAAS,QAAtB,wFAEe,OAEf,cAAC,IAAD,CAAOjE,UAAU,cAAcS,MAAO9E,aAAaC,QAAQ,aAC3D,8BAAK,mBAAGsI,KAAK,sCAAsC1D,OAAO,SAArD,wDCKI2D,G,OApBG,WAMd,OACI,sBAAKnE,UAAU,uBAAf,UACE,qBAAKA,UAAU,QAAf,mGACA,cAAC,IAAD,CACUe,KAAK,UACLC,KAAK,QACLC,QAVE,WACdjG,OAAOC,SAAS2H,OAAO,gBAMrB,6BCgKK/F,G,OAzKI,SAACC,GAAW,IACrBC,EAAcC,IAAdD,UADoB,EAEIE,mBAASC,KAAKC,MAAQ,KAF1B,mBAErBC,EAFqB,KAEXC,EAFW,OAGkBJ,mBAAS,GAH3B,mBAGrBK,EAHqB,KAGJC,EAHI,OAIsBN,mBAAS,GAJ/B,mBAIrBO,EAJqB,KAIFC,EAJE,OAKWR,oBAAS,GALpB,mBAKrBS,EALqB,KAKPC,EALO,OAMEV,mBAASC,KAAKC,OANhB,mBAMrBS,EANqB,KAMZC,EANY,OAOcZ,mBAASC,KAAKC,OAP5B,mBAONY,GAPM,aAQQd,mBAAS,IARjB,mBAQTgB,GARS,aASYhB,mBAAS,GATrB,gCAUUA,oBAAS,IAVnB,mBAUrBmB,EAVqB,KAURC,EAVQ,OAWYpB,oBAAS,GAXrB,mBAWrBqB,EAXqB,KAWPC,EAXO,KAwBtBC,EAAY,SAACC,KAoCnB,OARAS,qBAAU,WAER,GADAzC,QAAQC,IAAI,aACSyC,IAAlBrC,EAAMsC,QAAT,CACA,IAAIC,EAAMvC,EAAMsC,QAAQE,MAAM,KAAK,GACnCrB,EAAcoB,MAEb,CAACvC,EAAMsC,UAGR,cAAC,IAAD,CACEO,MAAM,uBACNC,UAAQ,EACRC,QAAS/C,EAAMgD,UACfC,OAAQ,KAJV,SAME,sBAAKC,UAAU,gBAAf,UACE,oHAIEtC,EA8BA,gCACE,eAAC,IAAD,CAAKuC,OAAQ,GAAIC,MAAO,CAACC,aAAa,QAAtC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,4BACA,qBAAKA,UAAU,WAAf,SAA2B1C,SAG/B,cAAC,IAAD,CAAK8C,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,8BACA,qBAAKA,UAAU,WAAf,wBAKN,sBAAKA,UAAU,cAAf,UACE,qGAIA,eAAC,IAAD,CAAKC,OAAQ,EAAGC,MAAO,CAACC,aAAa,QAArC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,mCACA,cAAC,IAAD,CACEA,UAAU,WACVK,YAAa/C,EACbgD,SAxFM,SAACC,GACzB9C,EAAqB8C,EAAEC,OAAOC,OAC9B1C,IAAmBb,KAAKC,MAAQS,GAAW,KAAM8C,QAAQ,KAuFvCC,SAAUrC,SAIhB,cAAC,IAAD,CAAK8B,KAAM,GAAX,SACE,qBAAKJ,UAAU,YAAf,SACE,qBAAKA,UAAU,gBAAf,SACE,cAACjD,EAAD,CACE4C,MAAM,YACNc,MAAOrD,EACPwD,SAhIU,WACJ,IAAtBpD,GACFC,EAAqBH,GACrBkB,EAAUlB,IAEVkB,EAAUhB,GAEZa,GAAe,GACfE,GAAgB,IAyHIsC,OAAO,mBAMhBzC,EACG,qBAAK8B,MAAO,CAACY,UAAU,UAAvB,SACA,cAAC,IAAD,CACEC,KAAK,UACLC,KAAK,QACLC,QA1GC,WACjBnE,EAAMoE,eAnBN3D,EAAmB,GACnBE,EAAqB,GACrBE,GAAe,GACfY,GAAgB,GAChBF,GAAe,IAqHD,6BASA,8BAtFR,8BACE,eAAC,IAAD,CAAK4B,OAAQ,GAAIC,MAAO,CAACC,aAAa,QAAtC,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,4BACA,cAAC,IAAD,CACEA,UAAU,WACVK,YAAY,IACZC,SAAU,SAACC,GACThD,EAAmBgD,EAAEC,OAAOC,eAKpC,cAAC,IAAD,CAAKL,KAAM,GAAX,SACE,qBAAKJ,UAAU,YAAf,SACE,cAAC,IAAD,CACEe,KAAK,UACLC,KAAK,QACLd,MAAO,CAAEiB,UAAW,QACpBF,QAzDI,WACpBtD,GAAe,GACfN,EAAYH,KAAKC,MAAQ,KACzBU,EAAWX,KAAKC,QAkDF,qCCXHiH,GA9EJ/C,EAAQ,KAID,WAAM,MAEYpE,mBAAS,IAFrB,gCAGUA,mBAAS,IAHnB,gCAIQA,mBAAS,KAJjB,mBAIfmC,EAJe,aAKYnC,mBAAS,KALrB,gCAMYA,oBAAS,IANrB,mBAMf6C,EANe,KAMJ8B,EANI,OAOU3E,mBAASC,KAAKC,MAAQ,KAPhC,mBAOfC,EAPe,KAOLC,EAPK,OAQYJ,oBAAS,GARrB,mBAQf4E,EARe,KAQJC,EARI,OASsB7E,mBAASC,KAAKC,MAAQ,KAT5C,gCAUsBF,mBAASC,KAAKC,MAAQ,MAV5C,mBAUfwB,EAVe,KAad5B,GAbc,KAYFG,KAAKC,MACHH,IAAdD,WAyBR,OALAmC,qBAAU,cAEP,IAID,sBAAKc,UAAU,iBAAf,UACE,qBAAKA,UAAU,QAAf,2DACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,YAAf,SACG6B,EACC,qBAAKa,IAAKtB,2BAEV,qBAAKsB,IAAKtB,iCAKlB,qBAAKpB,UAAU,qBAAf,SACE,qBAAKA,UAAU,sBAAf,SACE,cAACjD,EAAD,CACE4C,MAAM,YACNc,MAAOrD,EACPwD,SA3CoB,WAC9BkB,GAAa,GACbF,GAAa,GACbvE,EAAYH,KAAKC,QAyCP0D,OAAO,iBAKf,cAAC,EAAD,CACEf,UAAWA,EACXoB,aA7Ce,WACnBlG,OAAOC,SAAS2H,OAAO,gBAEvBd,GAAa,GACbF,GAAa,IA0CTjD,eAAgBA,EAChBS,QAASA,S,qDCrDXiF,EAAiB,CACnBC,SAAU,CACNlE,KAAM,IAEVmE,WAAY,CACRnE,KAAM,KAwGCoE,EApGS,WAAO,IAAD,EACXC,IAAKC,UAAbC,EADmB,oBAGpBC,EAAgB,uCAAG,sBAAAC,EAAA,sEACfF,EAAKG,iBACNxI,MAAK,SAACyI,GAECvJ,EAAQ,CAAEM,IADA,UAAGf,EAAH,4BAAmCY,aAAaC,QAAQ,WAC9CqD,OAAQ,OAAQpD,KAAMkJ,IACrCzI,MAAK,SAACC,GACHE,QAAQC,IAAIH,GACZvB,OAAOC,SAAS2H,OAAO,yBAGtCjG,OAAM,SAACqI,OAVS,2CAAH,qDAatB,OACI,sBAAKhF,UAAU,iBAAf,UACA,qBAAKE,MAAO,CAAC+D,SAAS,OAAQ9D,aAAa,QAA3C,mCACI,eAAC,IAAD,2BAAUkE,GAAV,IAA0BM,KAAOA,EAAMM,OAAO,WAA9C,UACI,cAAC,IAAKC,KAAN,CACIC,KAAK,MACLC,MAAM,MACNC,MAAO,CAAC,CACJC,UAAU,IAJlB,SAOI,eAAC,IAAD,WACI,cAAC,IAAOC,OAAR,CAAe9E,MAAM,IAArB,mBACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,mBACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,mBACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,mBACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,mBACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,mBACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,8BAIR,cAAC,IAAKyE,KAAN,CACIC,KAAK,SACLC,MAAM,SACNC,MAAO,CACL,CACEC,UAAU,IALlB,SASI,eAAC,IAAD,CACEjF,YAAY,8CACZmF,YAAU,EAFZ,UAII,cAAC,IAAOD,OAAR,CAAe9E,MAAM,OAArB,kBACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,SAArB,oBACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,OAArB,+BACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,QAArB,wBAKR,cAAC,IAAKyE,KAAN,CACIC,KAAO,YACPC,MAAM,kBACNC,MAAO,CAAC,CACJC,UAAU,IAJlB,SAOI,eAAC,IAAD,WACI,cAAC,IAAOC,OAAR,CAAe9E,MAAM,IAArB,+BACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,kCACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,wBACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,8BACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,gCACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,4CAIR,cAAC,IAAKyE,KAAN,CAAWC,KAAM,OAAOC,MAAM,4JAC1BC,MAAO,CAAC,CACJC,UAAU,IAFlB,SAKI,eAAC,IAAD,WACI,cAAC,IAAOC,OAAR,CAAe9E,MAAM,IAArB,qCACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,mCACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,mCACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,qCACA,cAAC,IAAO8E,OAAR,CAAe9E,MAAM,IAArB,yCAIR,cAAC,IAAKyE,KAAN,UACI,cAAC,IAAD,CAAQjE,QAAS2D,EAAjB,8B,kBCpHdP,EAAiB,CACnBC,SAAU,CACNlE,KAAM,GACNqF,OAAO,GAEXlB,WAAY,CACRnE,KAAM,GACNqF,OAAO,IA2OAC,EAvOU,WAAO,IAAD,EACZjB,IAAKC,UAAbC,EADoB,oBAarBC,EAAgB,uCAAG,sBAAAC,EAAA,sEACfF,EAAKG,iBACNxI,MAAK,SAACyI,GAECvJ,EAAQ,CAAEM,IADA,UAAGf,EAAH,2BAAkCY,aAAaC,QAAQ,WAC7CqD,OAAQ,OAAQpD,KAAMkJ,IACrCzI,MAAK,SAACC,GACHE,QAAQC,IAAIH,GACZvB,OAAOC,SAAS2H,OAAO,gBAGtCjG,OAAM,SAACqI,OAVS,2CAAH,qDAatB,OACI,sBAAK9E,MAAO,CAACwD,OAAO,UAApB,UACA,qBAAKxD,MAAO,CAAC+D,SAAS,OAAQ9D,aAAa,QAA3C,0BACI,eAAC,IAAD,2BAAUkE,GAAV,IAA0BM,KAAOA,EAAMM,OAAO,WAA9C,UACI,cAAC,IAAKC,KAAN,CACAhF,MAAO,CAACyF,WAAW,QACfR,KAAK,KACLC,MAAM,uCACNC,MAAO,CAAC,CACJC,UAAU,IALlB,SAQI,eAAC,IAAMM,MAAP,CAAa1F,MAAO,CAACyF,WAAW,UAAhC,UACI,cAAC,IAAD,CAAOlF,MAAM,IAAb,mCACA,cAAC,IAAD,CAAOA,MAAM,IAAb,0BACA,cAAC,IAAD,CAAOA,MAAM,IAAb,6CACA,cAAC,IAAD,CAAOA,MAAM,IAAb,wBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,sCAIR,cAAC,IAAKyE,KAAN,CACAhF,MAAO,CAACyF,WAAW,QACfR,KAAK,KACLC,MAAM,yCACNC,MAAO,CACL,CACEC,UAAU,IANlB,SAUG,eAAC,IAAMM,MAAP,CAAa1F,MAAO,CAACyF,WAAW,UAAhC,UACK,cAAC,IAAD,CAAOlF,MAAM,IAAb,mCACA,cAAC,IAAD,CAAOA,MAAM,IAAb,0BACA,cAAC,IAAD,CAAOA,MAAM,IAAb,6CACA,cAAC,IAAD,CAAOA,MAAM,IAAb,wBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,sCAIR,cAAC,IAAKyE,KAAN,CACAhF,MAAO,CAACyF,WAAW,QACfR,KAAK,KACLC,MAAM,2CACNC,MAAO,CACL,CACEC,UAAU,IANlB,SAUG,eAAC,IAAMM,MAAP,CAAa1F,MAAO,CAACyF,WAAW,UAAhC,UACK,cAAC,IAAD,CAAOlF,MAAM,IAAb,mCACA,cAAC,IAAD,CAAOA,MAAM,IAAb,0BACA,cAAC,IAAD,CAAOA,MAAM,IAAb,6CACA,cAAC,IAAD,CAAOA,MAAM,IAAb,wBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,sCAIR,cAAC,IAAKyE,KAAN,CACAhF,MAAO,CAACyF,WAAW,QACfR,KAAK,KACLC,MAAM,iEACNC,MAAO,CACL,CACEC,UAAU,IANlB,SAUG,eAAC,IAAMM,MAAP,CAAa1F,MAAO,CAACyF,WAAW,UAAhC,UACK,cAAC,IAAD,CAAOlF,MAAM,IAAb,mCACA,cAAC,IAAD,CAAOA,MAAM,IAAb,0BACA,cAAC,IAAD,CAAOA,MAAM,IAAb,6CACA,cAAC,IAAD,CAAOA,MAAM,IAAb,wBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,sCAIR,cAAC,IAAKyE,KAAN,CACAhF,MAAO,CAACyF,WAAW,QACfR,KAAK,KACLC,MAAM,0FACNC,MAAO,CACL,CACEC,UAAU,IANlB,SAUG,eAAC,IAAMM,MAAP,CAAa1F,MAAO,CAACyF,WAAW,UAAhC,UACK,cAAC,IAAD,CAAOlF,MAAM,IAAb,mCACA,cAAC,IAAD,CAAOA,MAAM,IAAb,0BACA,cAAC,IAAD,CAAOA,MAAM,IAAb,6CACA,cAAC,IAAD,CAAOA,MAAM,IAAb,wBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,sCAIR,cAAC,IAAKyE,KAAN,CACAhF,MAAO,CAACyF,WAAW,QACfR,KAAK,KACLC,MAAM,2EACNC,MAAO,CACL,CACEC,UAAU,IANlB,SAUG,eAAC,IAAMM,MAAP,CAAa1F,MAAO,CAACyF,WAAW,UAAhC,UACK,cAAC,IAAD,CAAOlF,MAAM,IAAb,mCACA,cAAC,IAAD,CAAOA,MAAM,IAAb,0BACA,cAAC,IAAD,CAAOA,MAAM,IAAb,6CACA,cAAC,IAAD,CAAOA,MAAM,IAAb,wBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,sCAIR,cAAC,IAAKyE,KAAN,CACAhF,MAAO,CAACyF,WAAW,QACfR,KAAK,KACLC,MAAM,mDACNC,MAAO,CACL,CACEC,UAAU,IANlB,SAUG,eAAC,IAAMM,MAAP,CAAa1F,MAAO,CAACyF,WAAW,UAAhC,UACK,cAAC,IAAD,CAAOlF,MAAM,IAAb,mCACA,cAAC,IAAD,CAAOA,MAAM,IAAb,0BACA,cAAC,IAAD,CAAOA,MAAM,IAAb,6CACA,cAAC,IAAD,CAAOA,MAAM,IAAb,wBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,sCAIR,cAAC,IAAKyE,KAAN,CACIhF,MAAO,CAACyF,WAAW,QACnBR,KAAK,KACLC,MAAM,sDACNC,MAAO,CACL,CACEC,UAAU,IANlB,SAUG,eAAC,IAAMM,MAAP,CAAa1F,MAAO,CAACyF,WAAW,UAAhC,UACK,cAAC,IAAD,CAAOlF,MAAM,IAAb,mCACA,cAAC,IAAD,CAAOA,MAAM,IAAb,0BACA,cAAC,IAAD,CAAOA,MAAM,IAAb,6CACA,cAAC,IAAD,CAAOA,MAAM,IAAb,wBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,sCAIR,cAAC,IAAKyE,KAAN,CACAhF,MAAO,CAACyF,WAAW,QACfR,KAAK,KACLC,MAAM,mFACNC,MAAO,CACL,CACEC,UAAU,IANlB,SAUG,eAAC,IAAMM,MAAP,CAAa1F,MAAO,CAACyF,WAAW,UAAhC,UACK,cAAC,IAAD,CAAOlF,MAAM,IAAb,sBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,4BACA,cAAC,IAAD,CAAOA,MAAM,IAAb,qBACA,cAAC,IAAD,CAAOA,MAAM,IAAb,2BAIR,cAAC,IAAKyE,KAAN,CAEIC,KAAK,MACLC,MAAM,4GACNC,MAAO,CACL,CACEC,UAAU,IAGdpF,MAAO,CAACwD,OAAO,SAASiC,WAAW,QATvC,SAWI,cAAC,IAASC,MAAV,CAAgB1F,MAAO,CAACyF,WAAW,UAAWlK,QA9M9C,CACZ,CAAE2J,MAAO,wCAAyC3E,MAAO,UACzD,CAAE2E,MAAO,qBAAsB3E,MAAO,OACtC,CAAE2E,MAAO,qBAAsB3E,MAAO,OACtC,CAAE2E,MAAO,uBAAwB3E,MAAO,QACxC,CAAE2E,MAAO,wCAAyC3E,MAAO,YACzD,CAAE2E,MAAO,4BAA6B3E,MAAO,UAC7C,CAAE2E,MAAO,QAAS3E,MAAO,UAuMmDoF,aAAc,CAAC,aAGnF,cAAC,IAAKX,KAAN,CAEIC,KAAK,MACLC,MAAM,2EACNlF,MAAO,CAACiB,UAAU,OAAOwE,WAAW,QAJxC,SAMI,cAAC,IAAD,MAGJ,cAAC,IAAKT,KAAN,UACI,cAAC,IAAD,CAAQhF,MAAO,CAACC,aAAa,QAASc,QAAS2D,EAA/C,8BCxOZ/B,G,OAAiBC,IAAjBD,OAAQE,EAASD,IAATC,KAqFD+C,EAnFS,WAMpB,OACI,sBAAK9F,UAAU,iBAAf,UACE,cAAC,EAAD,CAAOwD,MAAO,EAAd,0BACE,cAAC,IAAD,UACI,cAAC,EAAD,CAAMA,MAAO,EAAb,knBAIJ,cAAC,IAAD,UACI,cAAC,EAAD,CAAMA,MAAO,EAAGtD,MAAO,CAACiB,UAAU,QAAlC,qEAIJ,cAAC,IAAD,UACI,cAAC,EAAD,CAAMqC,MAAO,EAAb,iDAIJ,cAAC,IAAD,UACI,cAAC,EAAD,CAAMA,MAAO,EAAb,qFAIJ,cAAC,IAAD,UACI,cAAC,EAAD,CAAMA,MAAO,EAAb,mGAIJ,cAAC,IAAD,UACI,cAAC,EAAD,CAAMA,MAAO,EAAb,0CAIJ,cAAC,IAAD,UACI,cAAC,EAAD,CAAMA,MAAO,EAAb,kDAIJ,cAAC,IAAD,UACI,cAAC,EAAD,CAAMA,MAAO,EAAb,iIAIJ,cAAC,IAAD,CAAKuC,QAAQ,QAAb,SACI,cAAC,EAAD,CAAMvC,MAAO,EAAb,uMAIJ,cAAC,IAAD,CAAKuC,QAAQ,SAAb,SACI,qBAAK/F,UAAU,YAAf,SACE,qBAAK0C,IAAKtB,iCAIhB,cAAC,IAAD,CAAK2E,QAAQ,SAAb,SACA,qBAAK7F,MAAO,CAACiB,UAAU,QAAvB,SACI,cAAC,EAAD,CAAMqC,MAAO,EAAb,iEAKH,cAAC,IAAD,CAAKuC,QAAQ,SAAb,SACG,8BACI,cAAC,IAAD,CACIhF,KAAK,UACLC,KAAK,SACLd,MAAO,CAAEwD,OAAQ,UACjBzC,QAAS,WAtEzBjG,OAAOC,SAAS2H,OAAO,iBAkEX,0BCzEZC,G,OAAiBC,IAAjBD,OAWOmD,GAXUlD,IAATC,KAEC,WAEb,OACI,qBAAK/C,UAAU,iBAAf,SACE,cAAC,EAAD,CAAOwD,MAAO,EAAd,qDCqBKyC,EAnBA,WACb,OACE,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpD,IACjC,cAAC,IAAD,CAAOkD,OAAK,EAACC,KAAK,aAAaC,UAAWhC,IAC1C,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,aAAaC,UAAWjC,IAC1C,cAAC,IAAD,CAAO+B,OAAK,EAACC,KAAK,gBAAgBC,UAAWN,IAC7C,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,eAAeC,UAAW5B,IAC5C,cAAC,IAAD,CAAO0B,OAAK,EAACC,KAAK,UAAUC,UAAWV,IACvC,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,iBAAiBC,UAAWpC,IAC9C,cAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,YAAYC,UAAW9E,IACzC,cAAC,IAAD,CAAO4E,OAAK,EAACC,KAAK,OAAOC,UAAWzC,IACpC,cAAC,IAAD,CAAOuC,OAAK,EAACC,KAAK,OAAOC,UAAWJ,Q,SCX7BK,MAVf,WACI,OACI,cAAC,IAAD,UACI,qBAAKrG,UAAU,MAAf,SACI,cAAC,EAAD,SCEDsG,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBlK,MAAK,YAAkD,IAA/CmK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.b28ae853.chunk.js","sourcesContent":["let Api = '';\n\nif (!window.location.origin) {\n  window.location.origin = window.location.protocol + \"//\" + window.location.hostname + (window.location.port ? ':' + window.location.port: '');\n}\nswitch (process.env.NODE_ENV) {\n    case 'development':\n        Api = 'http://127.00.00.1:5000';  // Localhost\n        break;\n    case 'production':\n        Api = window.location.origin;\n        break;\n    default:\n        Api = window.location.origin;\n}\n\nexport {Api};","import { Api } from '../config/api';\n\nfunction parseJSON(response) {\n    return response\n}\n\n/**\n * Start Request\n *\n * @param {*url,*method,*data} options\n */\nexport function startReq(data) {\n    const options = {};\n    options.url = `${Api}/start`;\n    options.method = 'POST';\n    options.mode = 'cors';\n    options.body = JSON.stringify(data);\n    options.headers = {\n        'Content-Type': 'application/json;charset=UTF-8'\n    }\n    return fetch(options.url, options, { credentials: 'include' })\n        .then(response => response.json())\n        .then((res) => {\n            // returned items\n            console.log('success', res);\n            localStorage.setItem('user-id', res['user_id']);\n            return res;\n        })\n        .catch(err => ({ err }))\n}\n\n/**\n * Regular Requests\n * @param {*url,*method,*data} options \n */\nexport function request(options = {}) {\n    const user_id = localStorage.getItem('user-id')\n    const { data, url } = options\n    options = { ...options }\n    options.mode = 'cors'\n    delete options.url\n    if (data) {\n        delete options.data\n        options.body = JSON.stringify(data)\n    }\n    options.headers = {\n        'user-ID': user_id,\n        'Content-Type': 'application/json;charset=UTF-8',\n    }\n    \n    return fetch(url, options, { mode: 'cors', credentials: 'include'})\n        .then(parseJSON)\n        .then((res) => {\n            if (res.code === 200) {\n                return res;\n            }\n            else {\n                console.log('error', res);\n                return res;\n            }\n        })\n        .catch(err => ({ err }))\n}","import { Modal, Button, Row, Col, Statistic, Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { Api } from \"../../../config/api\";\nimport { request } from \"../../../utils/request\";\n\nconst PopupModal = (props) => {\n  const { Countdown } = Statistic;\n  const [deadline, setDeadline] = useState(Date.now() + 1000 * 1000);\n  const [firstEstimation, setFirstEstimation] = useState(0);\n  const [updatedEstimation, setUpdatedEstimation] = useState(0);\n  const [firstConfirm, setFirstConfim] = useState(false);\n  const [nowTime, setNowTime] = useState(Date.now());\n  const [userInputTime, setUserInputTime] = useState(Date.now());\n  const [questionId, setQuestionId] = useState(\"\");\n  const [AISuggestion, setAISuggestion] = useState(0);\n  const [showNextBtn, setShowNextBtn] = useState(false);\n  const [inputDiabled, setInputDiabled] = useState(false);\n\n  const handleCountdownFinished = () => {\n    if (updatedEstimation === 0) {\n      setUpdatedEstimation(firstEstimation);\n      storeData(firstEstimation);\n    } else {\n      storeData(updatedEstimation);\n    }\n    setShowNextBtn(true);\n    setInputDiabled(true);\n  };\n\n  const storeData = (passInUpdated) => {\n    let responseTime = 0;\n    if(userInputTime === 0) responseTime = props.modalCountDown;\n    else responseTime = userInputTime\n    let data = {\n      user_id: localStorage.getItem(\"user-id\"),\n      q_id: questionId,\n      resp_time: responseTime,\n      init_guess: firstEstimation,\n      final_guess: passInUpdated,\n      ai_suggestion: AISuggestion,\n    };\n\n    request({ url: `${Api}/answer`, method: \"POST\", data: data }).then((res) => {\n      console.log(res);\n    });\n  };\n\n  const getAISuggestion = (qId) => {\n    let url = `${Api}/imageInfo?q_id=` + qId;\n    request({ url: url, method: \"GET\" })\n      .then((response) => response.json())\n      .then((res) => {\n        let aiSugg = res[\"ai\"];\n        console.log(\"aiSugg\", aiSugg)\n        setAISuggestion(aiSugg);\n  })};\n\n  // const getAISuggestion = () => {\n  //   let url = `${Api}imageInfo?q_id=` + localStorage.getItem(\"q_id\");\n  //   console.log(\"question_id\", localStorage.getItem(\"q_id\"));\n  //   request({ url: url, method:\"GET\"})\n  //   .then(response => response.json())\n  //   .then(\n  //     res => {\n  //       let aiSugg = res['ai'];\n\n  //       setAISuggestion(aiSugg);\n  //     });\n  // };\n\n  const clearModal = () => {\n    setFirstEstimation(0);\n    setUpdatedEstimation(0);\n    setFirstConfim(false);\n    setInputDiabled(false);\n    setShowNextBtn(false);\n    setUserInputTime(0);\n  };\n\n  const handleConfirm = () => {\n    setFirstConfim(true);\n    setDeadline(Date.now() + 1000 * props.modalCountDown);\n    setNowTime(Date.now());\n  };\n\n  const handleUpdateInput = (e) => {\n    setUpdatedEstimation(e.target.value);\n    setUserInputTime(((Date.now() - nowTime) / 1000).toFixed(2));\n  };\n\n  const handleNext = () =>{\n    props.modalTimesUp();\n    clearModal();\n  };\n\n  useEffect(() => {\n    if(props.imgName === undefined ) return;\n    let qId = props.imgName.split(\".\")[0];\n    if(qId.length !== 0){\n      setQuestionId(qId);\n      getAISuggestion(qId); \n    }\n    \n\n    // localStorage.setItem('q_id', props.imgName[0] + props.imgName[1]);\n    // // setQuestionId(props.imgName[0] + props.imgName[1]);\n    // console.log(\"question_id saved\", localStorage.getItem(\"q_id\"));\n    // getAISuggestion();\n  }, [props.imgName]);\n\n  return (\n    <Modal\n      title=\"AI suggestion dialog\"\n      centered\n      visible={props.openModal}\n      footer={null}\n    >\n      <div className=\"pop-container\">\n        <div>\n          Please provide your best estimate of the number of penguins you saw in\n          the image.\n        </div>\n        {!firstConfirm ? (\n          <div>\n            <Row gutter={16} style={{marginBottom:\"40px\"}}>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">Your estimate:</div>\n                  <Input\n                    className=\"text-box\"\n                    placeholder=\"0\"\n                    onChange={(e) => {\n                      setFirstEstimation(e.target.value);\n                    }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    style={{ marginTop: \"42px\" }}\n                    onClick={handleConfirm}\n                  >\n                    Confirm\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        ) : (\n          <div>\n            <Row gutter={16} style={{marginBottom:\"40px\"}}>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">Your estimate:</div>\n                  <div className=\"text-box\">{firstEstimation}</div>\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">AI's suggestion:</div>\n                  <div className=\"text-box\">{AISuggestion}</div>\n                </div>\n              </Col>\n            </Row>\n\n            <div className=\"lower-modal\">\n              <div>\n                Would you like to update your answer based on the AI's\n                suggestion?\n              </div>\n              <Row gutter={0} style={{marginBottom:\"40px\"}}>\n                <Col span={12}>\n                  <div className=\"modal-col\">\n                    <div className=\"estimate-text\">Update your estimate:</div>\n                    <Input\n                      className=\"text-box\"\n                      placeholder={firstEstimation}\n                      onChange={handleUpdateInput}\n                      disabled={inputDiabled}\n                    />\n                  </div>\n                </Col>\n                <Col span={12}>\n                  <div className=\"modal-col\">\n                    <div className=\"estimate-text\">\n                      <Countdown\n                        title=\"Countdown\"\n                        value={deadline}\n                        onFinish={handleCountdownFinished}\n                        format=\"mm:ss\"\n                      />\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              {showNextBtn ? (\n                  <div style={{textAlign:\"center\"}}>\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    onClick={handleNext}\n                  >\n                    Next Image\n                  </Button>\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PopupModal;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Button, Select, Statistic } from \"antd\";\nimport \"./css/mainPage.css\";\nimport { attributesValue } from \"../../data/data.js\";\nimport PopupModal from \"./components/PopupModal\";\nimport { Api } from '../../config/api';\nimport { request } from \"../../utils/request\";\nconst fs = require(\"fs\");\n\nconst baseImgUrl = \"/static/img/\";\n\nconst MainPage = () => {\n  //   const dispatch = useDispatch();\n  const [valueList, setValueList] = useState([]);\n  const [imgIndex, setImgIndex] = useState(0);\n  const [imgName, setImgName] = useState(\"\");\n  const [imageList, setImageList] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [deadline, setDeadline] = useState(0);\n  const [deleteImg, setDeleteImg] = useState(false);\n  const [firstCountDown, setFirstCountDown] = useState(Date.now() + 1000 * 1000);\n  const [firstCountDownTime, setFirstCountDownTime] = useState(Date.now() + 1000 * 1000);\n  const [modalCountDown, setModalCountDown] = useState(Date.now() + 1000 * 1000);\n\n  const deadlineValue = Date.now() + 1000 * 2;\n  const { Countdown } = Statistic;\n\n  const handleCountdownFinished = () => {\n    setDeleteImg(true);\n    setOpenModal(true);\n  };\n\n  const modalTimesUp = () => {\n    if(imgIndex >= imageList.length - 1){\n      window.location.assign(\"/#/survey\");\n    }\n\n    setDeleteImg(false);\n    setOpenModal(false);\n    setImgName(imageList[imgIndex + 1]);\n    setImgIndex(imgIndex + 1);\n    \n    // setDeadline(Date.now() + 1000 * 2);\n  };\n\n  const getUserData = () => {\n    let url = `${Api}/userInfo?userID=` + localStorage.getItem(\"user-id\");\n    request({ url: url, method:\"GET\"})\n    .then(response => response.json())\n    .then(\n      res => {\n        console.log(\"success\", res);\n        let imageString = res['q_order']\n        formatImageList(imageString);\n        setModalCountDown(res['timing']);\n        // if(imageString[0] === \"E\"){setFirstCountDown(Date.now() + 1000*5);}\n        // else {setFirstCountDown(Date.now() + 1000*10);}\n        if(imageString[0] === \"E\"){setFirstCountDownTime(5);}\n        else {setFirstCountDownTime(10);}\n      }\n    );\n  };\n\n  const formatImageList = (imageString) =>{\n    let strList = imageString.split(\" \");\n    let imgList = [];\n\n    for(let str of strList){\n      str += \".jpeg\";\n      imgList.push(str);\n    }\n    setImgName(imgList[0]);\n    setImageList(imgList);\n  }\n\n  const handleImageLoaded = () =>{\n    setFirstCountDown(Date.now() + 1000*firstCountDownTime)\n  }\n\n  useEffect(() => {\n    getUserData();\n  }, []);\n\n  useEffect(()=>{\n    if(imgName !== undefined && imgName[0] === \"E\")\n      // setFirstCountDown(Date.now() + 1000 * 7);\n      setFirstCountDownTime(5);\n    else if(imgName !== undefined && imgName[0] === \"H\")\n    // setFirstCountDown(Date.now() + 1000 * 14);\n      setFirstCountDownTime(10);\n  },[imgName])\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"title\">Counting penguins with AI assistance</div>\n      <div className=\"row\">\n        <div className=\"column left-panel\">\n          <div className=\"img-frame-container\">\n            <div className=\"img-frame\">\n              {deleteImg ? (\n                <img src={baseImgUrl + \"blank.jpeg\"}></img>\n              ) : (\n                <img src={baseImgUrl + imageList[imgIndex]} onLoad={handleImageLoaded}></img>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"column right-panel\">\n          <div className=\"countdown-container\">\n            <Countdown\n              title=\"Countdown\"\n              value={firstCountDown}\n              onFinish={handleCountdownFinished}\n              format=\"mm:ss\"\n            />\n          </div>\n        </div>\n      </div>\n      <PopupModal\n        openModal={openModal}\n        modalTimesUp={modalTimesUp}\n        modalCountDown={modalCountDown}\n        imgName={imgName}\n      ></PopupModal>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React, { useState } from 'react';\n\nimport { startReq } from '../../utils/request.js';\nimport { Button, Checkbox, message, Typography} from \"antd\";\n\nimport \"./css/starterPage.css\";\n\nconst { Title,  Text } = Typography;\n\nconst StarterPage = () => {\n\n    const [consent, setConsent] = useState(false);\n\n    const start = () => {\n        if(consent === true){\n            console.log(\"Start Study\")\n            startReq({ consent: 1})\n                .then(window.location.assign(\"/#/demographic\"))\n        }\n        else{\n            message.warning('Need to give consent to participate in the study.');\n        }\n    };\n\n    function onChange(e) {\n        console.log(`consent = ${e.target.checked}`);\n        setConsent(e.target.checked);\n    }\n\n    return (\n        <div className=\"page-container\">\n          <Title level={3}>Counting Penguins with AI assistance</Title>\n            <Text level={5}>You are being asked to join a study for a course project at Johns Hopkins University. Participation in this study is voluntary and you will not receive any compensation. Even if you decide to join now, you can change your mind later. If you want to stop your participation in the study, you can simply close the browser. The  study tasks can be completed within 8-10 minutes. The records and data from the study will only be reviewed by team members involved in the project. We will not ask for information that identifies you, thus, your responses cannot be associated with your identity. By clicking next you accept these conditions, and you agree to  join the study.\n            </Text>\n            <div className='checkboxMessage'>\n                <Checkbox onChange={onChange}>\n                    I give my consent for my data to be used for the study\n                </Checkbox>\n            </div>\n\n            <div>\n                <Button\n                    type=\"primary\"\n                    size=\"medium\"\n                    style={{ margin: '0 10px' }}\n                    onClick={() => start()}\n                >\n                    Start Study\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default StarterPage;\n","import { Result, Button } from 'antd';\n\nconst PageNotFound = (props) => {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Button type=\"primary\" onClick={() => props.history.push(\"/\")}>Back Home</Button>}\n        />\n    )\n}\n\nexport default PageNotFound;","import React, { useEffect, useState } from \"react\";\nimport { Input } from \"antd\";\n\nimport { startReq } from \"../../utils/request.js\";\n\nimport \"./css/questionPage.css\";\n\nconst QuestionPage = () => {\n  useEffect(()=>{\n\n  },[])\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"title\">Questionnaire</div>\n      <div style={{fontSize:\"22px\"}}>\n        Here is your user id, you will need it for completing the form\n        below(link):{\" \"}\n      </div>\n      <Input className=\"id-text-box\" value={localStorage.getItem(\"user-id\")}/>\n      <div><a href=\"https://forms.gle/Ry6HT68adeZ8ihCv8\" target=\"_blank\">https://forms.gle/Ry6HT68adeZ8ihCv8</a></div>\n    </div>\n  );\n};\n\nexport default QuestionPage;\n","import React, { useState } from 'react';\n\nimport { Button} from \"antd\";\nimport \"./css/readyPage.css\";\n\nconst ReadyPage = () => {\n\n    const handleBtn = () =>{\n        window.location.assign(\"/#/mainPage\")\n    }\n\n    return (\n        <div className=\"ready-page-container\">\n          <div className=\"title\">Now you have mastered our application, click the button below to start the real test.</div>\n          <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    onClick={handleBtn}\n                  >\n                    Start Test\n                  </Button>\n        </div>\n    );\n};\n\nexport default ReadyPage;\n","import { Modal, Button, Row, Col, Statistic, Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { Api } from \"../../../config/api\";\nimport { request } from \"../../../utils/request\";\n\nconst PopupModal = (props) => {\n  const { Countdown } = Statistic;\n  const [deadline, setDeadline] = useState(Date.now() + 1000 * 1000);\n  const [firstEstimation, setFirstEstimation] = useState(0);\n  const [updatedEstimation, setUpdatedEstimation] = useState(0);\n  const [firstConfirm, setFirstConfim] = useState(false);\n  const [nowTime, setNowTime] = useState(Date.now());\n  const [userInputTime, setUserInputTime] = useState(Date.now());\n  const [questionId, setQuestionId] = useState(\"\");\n  const [AISuggestion, setAISuggestion] = useState(0);\n  const [showNextBtn, setShowNextBtn] = useState(false);\n  const [inputDiabled, setInputDiabled] = useState(false);\n\n  const handleCountdownFinished = () => {\n    if (updatedEstimation === 0) {\n      setUpdatedEstimation(firstEstimation);\n      storeData(firstEstimation);\n    } else {\n      storeData(updatedEstimation);\n    }\n    setShowNextBtn(true);\n    setInputDiabled(true);\n  };\n\n  const storeData = (passInUpdated) => {\n\n  };\n\n  const clearModal = () => {\n    setFirstEstimation(0);\n    setUpdatedEstimation(0);\n    setFirstConfim(false);\n    setInputDiabled(false);\n    setShowNextBtn(false);\n  };\n\n  const handleConfirm = () => {\n    setFirstConfim(true);\n    setDeadline(Date.now() + 1000 * 10);\n    setNowTime(Date.now());\n  };\n\n  const handleUpdateInput = (e) => {\n    setUpdatedEstimation(e.target.value);\n    setUserInputTime(((Date.now() - nowTime) / 1000).toFixed(2));\n  };\n\n  const handleNext = () =>{\n    props.modalTimesUp();\n    clearModal();\n  };\n\n  useEffect(() => {\n    console.log(\"Once\")\n    if(props.imgName === undefined ) return;\n    let qId = props.imgName.split(\".\")[0];\n    setQuestionId(qId);\n    // getAISuggestion(qId); \n  }, [props.imgName]);\n\n  return (\n    <Modal\n      title=\"AI suggestion dialog\"\n      centered\n      visible={props.openModal}\n      footer={null}\n    >\n      <div className=\"pop-container\">\n        <div>\n          Please provide your best estimate of the number of penguins you saw in\n          the image.\n        </div>\n        {!firstConfirm ? (\n          <div>\n            <Row gutter={16} style={{marginBottom:\"40px\"}}>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">Your estimate:</div>\n                  <Input\n                    className=\"text-box\"\n                    placeholder=\"0\"\n                    onChange={(e) => {\n                      setFirstEstimation(e.target.value);\n                    }}\n                  />\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    style={{ marginTop: \"42px\" }}\n                    onClick={handleConfirm}\n                  >\n                    Confirm\n                  </Button>\n                </div>\n              </Col>\n            </Row>\n          </div>\n        ) : (\n          <div>\n            <Row gutter={16} style={{marginBottom:\"40px\"}}>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">Your estimate:</div>\n                  <div className=\"text-box\">{firstEstimation}</div>\n                </div>\n              </Col>\n              <Col span={12}>\n                <div className=\"modal-col\">\n                  <div className=\"estimate-text\">AI's suggestion:</div>\n                  <div className=\"text-box\">21</div>\n                </div>\n              </Col>\n            </Row>\n\n            <div className=\"lower-modal\">\n              <div>\n                Would you like to update your answer based on the AI's\n                suggestion?\n              </div>\n              <Row gutter={0} style={{marginBottom:\"40px\"}}>\n                <Col span={12}>\n                  <div className=\"modal-col\">\n                    <div className=\"estimate-text\">Update your estimate:</div>\n                    <Input\n                      className=\"text-box\"\n                      placeholder={firstEstimation}\n                      onChange={handleUpdateInput}\n                      disabled={inputDiabled}\n                    />\n                  </div>\n                </Col>\n                <Col span={12}>\n                  <div className=\"modal-col\">\n                    <div className=\"estimate-text\">\n                      <Countdown\n                        title=\"Countdown\"\n                        value={deadline}\n                        onFinish={handleCountdownFinished}\n                        format=\"mm:ss\"\n                      />\n                    </div>\n                  </div>\n                </Col>\n              </Row>\n              {showNextBtn ? (\n                  <div style={{textAlign:\"center\"}}>\n                  <Button\n                    type=\"primary\"\n                    size=\"large\"\n                    onClick={handleNext}\n                  >\n                    Finish Tryout\n                  </Button>\n                  </div>\n                ) : (\n                  <div></div>\n                )}\n            </div>\n          </div>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default PopupModal;\n","import React, { useEffect, useState } from \"react\";\nimport { Statistic } from \"antd\";\nimport \"./css/trailPage.css\";\nimport PopupModal from \"./components/PopupModal\";\nimport { request } from \"../../utils/request\";\nconst fs = require(\"fs\");\n\nconst baseImgUrl = \"/static/img/\";\n\nconst TrailPage = () => {\n  //   const dispatch = useDispatch();\n  const [valueList, setValueList] = useState([]);\n  const [imgIndex, setImgIndex] = useState(0);\n  const [imgName, setImgName] = useState(\"\");\n  const [imageList, setImageList] = useState([]);\n  const [openModal, setOpenModal] = useState(false);\n  const [deadline, setDeadline] = useState(Date.now() + 1000 * 10);\n  const [deleteImg, setDeleteImg] = useState(false);\n  const [firstCountDown, setFirstCountDown] = useState(Date.now() + 1000 * 1000);\n  const [modalCountDown, setModalCountDown] = useState(Date.now() + 1000 * 1000);\n\n  let deadlineValue = Date.now() + 1000 * 10;\n  const { Countdown } = Statistic;\n\n  const handleCountdownFinished = () => {\n    setDeleteImg(true);\n    setOpenModal(true);\n    setDeadline(Date.now());\n  };\n\n  const modalTimesUp = () => {\n    window.location.assign(\"/#/readyPage\");\n  \n    setDeleteImg(false);\n    setOpenModal(false);\n    // setImgName(imageList[imgIndex + 1]);\n    // setImgIndex(imgIndex + 1);\n    \n    // setDeadline(Date.now() + 1000 * 2);\n  };\n\n\n  useEffect(() => {\n    \n  }, []);\n\n\n  return (\n    <div className=\"page-container\">\n      <div className=\"title\">Counting penguins with AI assistance (Tryout)</div>\n      <div className=\"row\">\n        <div className=\"column left-panel\">\n          <div className=\"img-frame-container\">\n            <div className=\"img-frame\">\n              {deleteImg ? (\n                <img src={baseImgUrl + \"blank.jpeg\"}></img>\n              ) : (\n                <img src={baseImgUrl + \"trail.jpeg\"}></img>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"column right-panel\">\n          <div className=\"countdown-container\">\n            <Countdown\n              title=\"Countdown\"\n              value={deadline}\n              onFinish={handleCountdownFinished}\n              format=\"mm:ss\"\n            />\n          </div>\n        </div>\n      </div>\n      <PopupModal\n        openModal={openModal}\n        modalTimesUp={modalTimesUp}\n        modalCountDown={modalCountDown}\n        imgName={imgName}\n      ></PopupModal>\n    </div>\n  );\n};\n\nexport default TrailPage;\n","import React, { useState } from 'react';\n\nimport \"./index.css\";\n\nimport { request } from '../../utils/request.js';\nimport { Button, Form, Input, Select} from \"antd\";\nimport {Api} from \"../../config/api\";\n\nconst layout = {\n  labelCol: {\n    span: 12,\n  },\n  wrapperCol: {\n    span: 12,\n  },\n};\n\nconst tailLayout = {\n  wrapperCol: {\n    offset: 8,\n    span: 12,\n  },\n};\n\nconst formItemLayout = {\n    labelCol: {\n        span: 12,\n    },\n    wrapperCol: {\n        span: 12,\n    },\n};\n\nconst DemographicPage = () => {\n    const [form] = Form.useForm();\n\n    const handleFormSubmit = async () => {\n        await form.validateFields()\n            .then((values) => {\n                    let url = `${Api}/userDemographic?userID=` + localStorage.getItem(\"user-id\");\n                    request({ url: url, method: \"POST\", data: values})\n                        .then((res) => {\n                            console.log(res);\n                            window.location.assign(\"/#/instructions\")\n                        });\n            })\n            .catch((errorInfo) => {});\n    };\n\n    return (\n        <div className=\"form-container\">\n        <div style={{fontSize:\"30px\", marginBottom:\"20px\"}}>Demographic Questions</div>\n            <Form {...formItemLayout} form ={form} layout='vertical'>\n                <Form.Item\n                    name=\"age\"\n                    label=\"Age\"\n                    rules={[{\n                        required: true,\n                    },\n                    ]}>\n                    <Select>\n                        <Select.Option value=\"1\">18-24</Select.Option>\n                        <Select.Option value=\"2\">25-29</Select.Option>\n                        <Select.Option value=\"3\">30-34</Select.Option>\n                        <Select.Option value=\"4\">35-39</Select.Option>\n                        <Select.Option value=\"5\">40-44</Select.Option>\n                        <Select.Option value=\"6\">45-49</Select.Option>\n                        <Select.Option value=\"7\">50 or older</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item\n                    name=\"gender\"\n                    label=\"Gender\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                    <Select\n                      placeholder=\"Select a option and change input text above\"\n                      allowClear\n                    >\n                        <Select.Option value=\"male\">male</Select.Option>\n                        <Select.Option value=\"female\">female</Select.Option>\n                        <Select.Option value=\"none\">prefer not to say</Select.Option>\n                        <Select.Option value=\"other\">other</Select.Option>\n                    </Select>\n                </Form.Item>\n\n\n                <Form.Item\n                    name = \"education\"\n                    label=\"Education Level\"\n                    rules={[{\n                        required: true,\n                    },\n                    ]}>\n                    <Select>\n                        <Select.Option value=\"1\">Up to high school</Select.Option>\n                        <Select.Option value=\"2\">High school Graduate</Select.Option>\n                        <Select.Option value=\"3\">In college</Select.Option>\n                        <Select.Option value=\"4\">College Graduate</Select.Option>\n                        <Select.Option value=\"5\">In graduate school</Select.Option>\n                        <Select.Option value=\"6\">Completed graduate school</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item name =\"rate\" label=\"On a scale from 1 (not familiar at all) to 5 (have a complete understanding) please rate your level of familiarity with the term Artificial Intelligence:\"\n                    rules={[{\n                        required: true,\n                    },\n                    ]}>\n                    <Select>\n                        <Select.Option value=\"1\">1 (Not at all familiar)</Select.Option>\n                        <Select.Option value=\"2\">2 (Slightly familiar)</Select.Option>\n                        <Select.Option value=\"3\">3 (Somewhat familiar)</Select.Option>\n                        <Select.Option value=\"4\">4 (Moderately familiar)</Select.Option>\n                        <Select.Option value=\"5\">5 (Extremely familiar)</Select.Option>\n                    </Select>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button onClick={handleFormSubmit}>Submit</Button>\n                </Form.Item>\n\n            </Form>\n\n        </div>\n    );\n};\n\nexport default DemographicPage;\n","import React from 'react';\n\nimport \"./index.css\";\n\nimport { request } from '../../utils/request.js';\nimport { Button, Form, Input, Radio, Checkbox} from \"antd\";\nimport {Api} from \"../../config/api\";\n\nconst formItemLayout = {\n    labelCol: {\n        span: 22,\n        offset:1,\n    },\n    wrapperCol: {\n        span: 22,\n        offset:1,\n    },\n};\n\nconst EndingSurveyPage = () => {\n    const [form] = Form.useForm();\n\n    const options = [\n        { label: 'Used Finger to Trace Screen and Count', value: 'Finger' },\n        { label: 'Counted one by one', value: 'One' },\n        { label: 'Counted two by two', value: 'Two' },\n        { label: 'Counted five by five', value: 'Five' },\n        { label: 'Did not count and made rough estimate', value: 'Estimate'},\n        { label: 'Made random initial guess', value: 'Random'},\n        { label: 'Other', value: 'Other'},\n    ];\n\n    const handleFormSubmit = async () => {\n        await form.validateFields()\n            .then((values) => {\n                    let url = `${Api}/userSurveyData?userID=` + localStorage.getItem(\"user-id\");\n                    request({ url: url, method: \"POST\", data: values})\n                        .then((res) => {\n                            console.log(res);\n                            window.location.assign(\"/#/end\")\n                        });\n            })\n            .catch((errorInfo) => {});\n    };\n\n    return (\n        <div style={{margin:\"4% 10%\"}}>\n        <div style={{fontSize:\"30px\", marginBottom:\"20px\"}}>Final Survey</div>\n            <Form {...formItemLayout} form ={form} layout='vertical'>\n                <Form.Item\n                style={{fontWeight:\"bold\"}}\n                    name=\"q1\"\n                    label=\"I trusted the AI agent's suggestions\"\n                    rules={[{\n                        required: true,\n                    },\n                    ]}>\n                    <Radio.Group style={{fontWeight:\"normal\"}}>\n                        <Radio value=\"1\">1 (strongly disagree)</Radio>\n                        <Radio value=\"2\">2 (disagree)</Radio>\n                        <Radio value=\"3\">3 (neither agree nor disagree) </Radio>\n                        <Radio value=\"4\">4 (agree) </Radio>\n                        <Radio value=\"5\">5 (strongly agree) </Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                style={{fontWeight:\"bold\"}}\n                    name=\"q2\"\n                    label=\"The AI agent's suggestions were useful\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                   <Radio.Group style={{fontWeight:\"normal\"}}>\n                        <Radio value=\"1\">1 (strongly disagree)</Radio>\n                        <Radio value=\"2\">2 (disagree)</Radio>\n                        <Radio value=\"3\">3 (neither agree nor disagree) </Radio>\n                        <Radio value=\"4\">4 (agree) </Radio>\n                        <Radio value=\"5\">5 (strongly agree) </Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                style={{fontWeight:\"bold\"}}\n                    name=\"q3\"\n                    label=\"The AI agent made reasonable suggestions\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                   <Radio.Group style={{fontWeight:\"normal\"}}>\n                        <Radio value=\"1\">1 (strongly disagree)</Radio>\n                        <Radio value=\"2\">2 (disagree)</Radio>\n                        <Radio value=\"3\">3 (neither agree nor disagree) </Radio>\n                        <Radio value=\"4\">4 (agree) </Radio>\n                        <Radio value=\"5\">5 (strongly agree) </Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                style={{fontWeight:\"bold\"}}\n                    name=\"q4\"\n                    label=\"I could tell when the AI agent made an unreasonable suggestion\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                   <Radio.Group style={{fontWeight:\"normal\"}}>\n                        <Radio value=\"1\">1 (strongly disagree)</Radio>\n                        <Radio value=\"2\">2 (disagree)</Radio>\n                        <Radio value=\"3\">3 (neither agree nor disagree) </Radio>\n                        <Radio value=\"4\">4 (agree) </Radio>\n                        <Radio value=\"5\">5 (strongly agree) </Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                style={{fontWeight:\"bold\"}}\n                    name=\"q5\"\n                    label=\"I had sufficient time to contrast my initial guess with the AI agent’s suggestions\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                   <Radio.Group style={{fontWeight:\"normal\"}}>\n                        <Radio value=\"1\">1 (strongly disagree)</Radio>\n                        <Radio value=\"2\">2 (disagree)</Radio>\n                        <Radio value=\"3\">3 (neither agree nor disagree) </Radio>\n                        <Radio value=\"4\">4 (agree) </Radio>\n                        <Radio value=\"5\">5 (strongly agree) </Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                style={{fontWeight:\"bold\"}}\n                    name=\"q6\"\n                    label=\"I would not be able to accurately complete the task without the AI agent\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                   <Radio.Group style={{fontWeight:\"normal\"}}>\n                        <Radio value=\"1\">1 (strongly disagree)</Radio>\n                        <Radio value=\"2\">2 (disagree)</Radio>\n                        <Radio value=\"3\">3 (neither agree nor disagree) </Radio>\n                        <Radio value=\"4\">4 (agree) </Radio>\n                        <Radio value=\"5\">5 (strongly agree) </Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                style={{fontWeight:\"bold\"}}\n                    name=\"q7\"\n                    label=\"I contributed more to the task than the AI agent\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                   <Radio.Group style={{fontWeight:\"normal\"}}>\n                        <Radio value=\"1\">1 (strongly disagree)</Radio>\n                        <Radio value=\"2\">2 (disagree)</Radio>\n                        <Radio value=\"3\">3 (neither agree nor disagree) </Radio>\n                        <Radio value=\"4\">4 (agree) </Radio>\n                        <Radio value=\"5\">5 (strongly agree) </Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                    style={{fontWeight:\"bold\"}}\n                    name=\"q8\"\n                    label=\"I would use this AI agent for future counting tasks\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                   <Radio.Group style={{fontWeight:\"normal\"}}>\n                        <Radio value=\"1\">1 (strongly disagree)</Radio>\n                        <Radio value=\"2\">2 (disagree)</Radio>\n                        <Radio value=\"3\">3 (neither agree nor disagree) </Radio>\n                        <Radio value=\"4\">4 (agree) </Radio>\n                        <Radio value=\"5\">5 (strongly agree) </Radio>\n                    </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                style={{fontWeight:\"bold\"}}\n                    name=\"q9\"\n                    label=\"Your overall performance on the task was 75%. Who do you blame for the mistakes?\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                  >\n                   <Radio.Group style={{fontWeight:\"normal\"}}>\n                        <Radio value=\"1\"> Myself </Radio>\n                        <Radio value=\"2\"> The AI Agent </Radio>\n                        <Radio value=\"3\"> Both  </Radio>\n                        <Radio value=\"4\"> No One </Radio>\n                    </Radio.Group>\n                </Form.Item>\n                \n                <Form.Item\n                \n                    name=\"q10\"\n                    label=\"What strategy did you use for estimating the number of penguins (may select multiple and write your own)?\"\n                    rules={[\n                      {\n                        required: true,\n                      },\n                    ]}\n                    style={{margin:\"0% 15%\",fontWeight:\"bold\"}}\n                  >\n                    <Checkbox.Group style={{fontWeight:\"normal\"}} options={options} defaultValue={['Other']}/>\n                </Form.Item>\n\n                <Form.Item\n             \n                    name=\"q11\"\n                    label=\"What other strategies did you use for estimating the number of penguins?\"\n                    style={{marginTop:\"20px\",fontWeight:\"bold\"}}\n                  >\n                    <Input/>\n                </Form.Item>\n\n                <Form.Item>\n                    <Button style={{marginBottom:\"50px\"}} onClick={handleFormSubmit}>Submit</Button>\n                </Form.Item>\n\n            </Form>\n\n        </div>\n    );\n};\n\nexport default EndingSurveyPage;\n","import React, { useState } from 'react';\n\nimport { startReq } from '../../utils/request.js';\nimport { Button, Checkbox, message, Typography, Row} from \"antd\";\n\nimport \"./css/instructionPage.css\";\n\nconst baseImgUrl = \"/static/img/\";\n\nconst { Title,  Text } = Typography;\n\nconst InstructionPage = () => {\n\n    const next = () => {\n        window.location.assign(\"/#/trialPage\")\n    };\n\n    return (\n        <div className=\"page-container\">\n          <Title level={3}>Instructions</Title>\n            <Row>\n                <Text level={5}> Welcome to counting penguins in the wild! Monitoring changes in penguin population is important for wildlife conservation. The Penguin Watch project has captured images of penguin colonies in Antarctica with fixed cameras in more than 30 locations for several years. To track the colony sizes, the number of penguins in each image is required. Your task today is to count penguins with the assistance of an artificial intelligence (AI) agent. The AI agent has been previously exposed to other images with penguins (different from the ones you will see), and has been trained to predict the number of penguins.\n                </Text>\n            </Row>\n\n            <Row>\n                <Text level={5} style={{marginTop:\"30px\"}}> The order of the instructions you have to follow is:\n                </Text>\n            </Row>\n\n            <Row>\n                <Text level={5}> 1. Attentively observe the image\n                </Text>\n            </Row>\n\n            <Row>\n                <Text level={5}> 2. Provide your best estimate on the number of penguins that you saw\n                </Text>\n            </Row>\n\n            <Row>\n                <Text level={5}> 3. Read the suggestion provided by the AI (Note that this AI agent is not perfect)\n                </Text>\n            </Row>\n\n            <Row>\n                <Text level={5}> 4. Provide a final answer\n                </Text>\n            </Row>\n\n            <Row>\n                <Text level={5}> 5. Complete the post study survey\n                </Text>\n            </Row>\n\n            <Row>\n                <Text level={5}> Be aware of the countdown timers to complete each instruction! These will appear and start counting immediately.\n                </Text>\n            </Row>\n\n            <Row justify=\"start\">\n                <Text level={5}> Remember to consider penguins that are occluded, cut by the corners of the image, in different poses or appearances in your count estimation. See the following image for a reference:\n                </Text>\n            </Row>\n\n            <Row justify=\"center\">\n                <div className=\"img-frame\">\n                  <img src={baseImgUrl + \"example.jpeg\"}></img>\n                </div>\n            </Row>\n\n            <Row justify=\"center\">\n            <div style={{marginTop:\"30px\"}}>\n                <Text level={5}> Now, click next to do a test run for the task.\n                </Text>\n                </div>\n            </Row>\n\n             <Row justify=\"center\">\n                <div>\n                    <Button\n                        type=\"primary\"\n                        size=\"medium\"\n                        style={{ margin: '0 10px' }}\n                        onClick={() => next()}\n                    >\n                        Next\n                    </Button>\n                </div>\n             </Row>\n        </div>\n    );\n};\n\nexport default InstructionPage;\n","import React, { useState } from 'react';\n\nimport { startReq } from '../../utils/request.js';\nimport { Button, Checkbox, message, Typography} from \"antd\";\n\nimport \"./css/lastPage.css\";\n\nconst { Title,  Text } = Typography;\n\nconst LastPage = () => {\n\n    return (\n        <div className=\"page-container\">\n          <Title level={3}>Thank you for Completing the Study!</Title>\n        </div>\n    );\n};\n\nexport default LastPage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router';\n\nimport MainPage from \"../../pages/MainPage/MainPage\";\nimport StarterPage from \"../../pages/StarterPage/StarterPage\";\nimport PageNotFound from '../../pages/404';\nimport QuestionPage from \"../../pages/QuestionPage/QuestionPage\";\nimport ReadyPage from \"../../pages/ReadyPage/ReadyPage\";\nimport TrailPage from \"../../pages/TrailPage/TrailPage\"\nimport DemographicPage from \"../../pages/DemographicPage/DemographicPage\";\nimport EndingSurveyPage from \"../../pages/EndingSurveyPage/EndingSurveyPage\";\nimport InstructionPage from \"../../pages/InstructionPage/InstructionPage\";\nimport LastPage from \"../../pages/LastPage/LastPage\";\n\n\nconst Router = () => {\n  return (\n    <Switch>\n        <Route exact path=\"/\" component={StarterPage} />\n        <Route exact path=\"/trialPage\" component={TrailPage} />\n        <Route exact path=\"/readyPage\" component={ReadyPage} />\n        <Route exact path=\"/instructions\" component={InstructionPage} />\n        <Route exact path=\"/demographic\" component={DemographicPage} />\n        <Route exact path=\"/survey\" component={EndingSurveyPage} />\n        <Route exact path=\"/questionnaire\" component={QuestionPage} />\n        <Route exact path=\"/mainpage\" component={MainPage} />\n        <Route exact path=\"/404\" component={PageNotFound} />\n        <Route exact path=\"/end\" component={LastPage} />\n\n    </Switch>\n  )\n}\n\n\nexport default Router;","import './App.css';\n\nimport Route from './components/route/route';\n\nimport { HashRouter as Router } from 'react-router-dom';\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <Route />\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'; \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}